{"version":3,"file":"scripts/618.85b70d16e0677a1951da.js","mappings":"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","sources":["webpack://video-calls/./src/core/components/navigation/navigation.tsx","webpack://video-calls/./node_modules/@mui/icons-material/esm/MicOff.js","webpack://video-calls/./node_modules/@mui/icons-material/esm/VideocamOff.js","webpack://video-calls/./src/core/components/user-control/user-control.tsx","webpack://video-calls/./node_modules/@mui/icons-material/esm/DeleteOutline.js","webpack://video-calls/./src/core/components/user/user.tsx","webpack://video-calls/./src/core/layouts/friends-layout/friends-layout.tsx","webpack://video-calls/./src/modules/friends/pages/friends/friends.tsx"],"sourcesContent":["import { memo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Group, Dashboard, Settings } from '@mui/icons-material';\nimport { Box, Divider, Tooltip } from '@mui/material';\nimport { theme } from '../../theme';\n\nconst Navigation = () => {\n  const navigate = useNavigate();\n\n  //  TODO: Добавить Drawer компонент\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        rowGap: '24px',\n        height: '100%',\n        alignContent: 'start',\n        padding: '25px 16px',\n        justifyContent: 'center',\n      }}\n    >\n      <Box sx={{ display: 'grid', rowGap: '16px' }}>\n        <Tooltip title=\"Друзья\" arrow placement=\"right\">\n          <Box\n            sx={{\n              display: 'grid',\n              padding: '8px',\n              backgroundColor: theme.palette.grey[400],\n              cursor: 'pointer',\n              borderRadius: '8px',\n              justifyContent: 'center',\n              width: '40px',\n            }}\n            onClick={() => navigate('/friends')}\n          >\n            <Group />\n          </Box>\n        </Tooltip>\n        <Tooltip title=\"Каналы\" arrow placement=\"right\">\n          <Box\n            sx={{\n              display: 'grid',\n              padding: '8px',\n              backgroundColor: theme.palette.grey[400],\n              cursor: 'pointer',\n              borderRadius: '8px',\n              justifyContent: 'center',\n              width: '40px',\n            }}\n            onClick={() => navigate('/channels')}\n          >\n            <Dashboard />\n          </Box>\n        </Tooltip>\n      </Box>\n      <Divider />\n      <Tooltip title=\"Профиль\" arrow placement=\"right\">\n        <Box\n          sx={{\n            display: 'grid',\n            padding: '8px',\n            backgroundColor: theme.palette.grey[400],\n            cursor: 'pointer',\n            borderRadius: '8px',\n            justifyContent: 'center',\n            width: '40px',\n          }}\n          onClick={() => navigate('/profile')}\n        >\n          <Settings />\n        </Box>\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport const NavigationMemoized = memo(Navigation);\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 11h-1.7c0 .74-.16 1.43-.43 2.05l1.23 1.23c.56-.98.9-2.09.9-3.28zm-4.02.17c0-.06.02-.11.02-.17V5c0-1.66-1.34-3-3-3S9 3.34 9 5v.18l5.98 5.99zM4.27 3 3 4.27l6.01 6.01V11c0 1.66 1.33 3 2.99 3 .22 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.54-.9L19.73 21 21 19.73 4.27 3z\"\n}), 'MicOff');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m21 6.5-4 4V7c0-.55-.45-1-1-1H9.82L21 17.18V6.5zM3.27 2 2 3.27 4.73 6H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.21 0 .39-.08.54-.18L19.73 21 21 19.73 3.27 2z\"\n}), 'VideocamOff');","import { memo } from 'react';\nimport { Avatar, Badge, Box, colors, Typography } from '@mui/material';\nimport { theme } from '../../theme';\nimport { MicOff, Settings, VideocamOff } from '@mui/icons-material';\nimport { useSelector } from 'react-redux';\nimport { userIdSelector, userNameSelector, userStatusSelector } from '../../../modules/user/store/selectors';\n\nconst UserControl = () => {\n  const userName = useSelector(userNameSelector);\n  const userId = useSelector(userIdSelector);\n  const userStatus = useSelector(userStatusSelector);\n\n  return (\n    <Box sx={{ display: 'grid', alignItems: 'center', backgroundColor: theme.palette.grey[300], padding: '12px 20px' }}>\n      <Box sx={{ display: 'grid', columnGap: '8px', gridTemplateColumns: '40px 1fr 104px' }}>\n        {/* Аватар пользователя */}\n        <Box\n          sx={{\n            '.MuiBadge-badge': {\n              border: `1px solid ${theme.palette.common.white}`,\n            },\n            '.MuiBadge-colorSuccess': {\n              backgroundColor: theme.palette.success.light,\n            },\n            '.MuiBadge-colorError': {\n              backgroundColor: theme.palette.error.light,\n            },\n          }}\n        >\n          <Badge\n            overlap=\"circular\"\n            variant=\"dot\"\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n            color={userStatus === 'online' ? 'success' : 'error'}\n          >\n            <Avatar sx={{ backgroundColor: colors.deepPurple[500] }}></Avatar>\n          </Badge>\n        </Box>\n        {/* Имя пользователя */}\n        <Box>\n          <Typography variant=\"body2\">{userName}</Typography>\n          <Typography sx={{ color: theme.palette.grey[500] }} variant=\"caption\">\n            #{userId.slice(-4)}\n          </Typography>\n        </Box>\n        {/* Кнопки управления */}\n        <Box sx={{ display: 'grid', columnGap: '16px', gridTemplateColumns: 'repeat(3, 24px)', alignItems: 'center' }}>\n          <MicOff sx={{ color: theme.palette.grey[700] }} />\n          <VideocamOff sx={{ color: theme.palette.grey[700] }} />\n          <Settings sx={{ color: theme.palette.grey[700] }} />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport const UserControlMemoized = memo(UserControl);\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');","import { memo } from 'react';\nimport { Avatar, colors, Badge, Box, Typography, IconButton } from '@mui/material';\nimport { theme } from '../../theme';\nimport { DeleteOutline } from '@mui/icons-material';\nimport { socket } from '../../utils/socket';\nimport { useSelector } from 'react-redux';\nimport { userIdSelector } from '../../../modules/user/store/selectors';\nimport { useNavigate } from 'react-router-dom';\n\nconst User = ({\n  name,\n  status,\n  channelId,\n}: {\n  id: string;\n  name: string;\n  status: string;\n  email: string;\n  channelId?: string;\n}) => {\n  const userId = useSelector(userIdSelector);\n  const navigate = useNavigate();\n\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: 'max-content 1fr max-content',\n        columnGap: '8px',\n        alignItems: 'center',\n        padding: '8px 12px',\n        borderRadius: '8px',\n        cursor: 'pointer',\n        ':hover': {\n          backgroundColor: theme.palette.grey[300],\n          '.delete-icon': {\n            display: 'grid',\n          },\n        },\n        '.MuiBadge-badge': {\n          border: `1px solid ${theme.palette.common.white}`,\n        },\n        '.MuiBadge-colorSuccess': {\n          backgroundColor: theme.palette.success.light,\n        },\n        '.MuiBadge-colorError': {\n          backgroundColor: theme.palette.error.light,\n        },\n      }}\n      onClick={() => {\n        socket.emit('on-channel-join', channelId, userId);\n        navigate('/messages');\n      }}\n    >\n      <Badge\n        overlap=\"circular\"\n        variant=\"dot\"\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        color={status === 'online' ? 'success' : 'error'}\n      >\n        <Avatar sx={{ backgroundColor: colors.deepPurple[500] }} />\n      </Badge>\n      <Box sx={{ display: 'grid', gridTemplateColumns: 'max-content' }}>\n        <Typography variant=\"body2\">{name ? name : ''}</Typography>\n        <Typography variant=\"caption\">В сети</Typography>\n      </Box>\n      <Box className=\"delete-icon\" sx={{ display: 'none' }}>\n        <IconButton>\n          <DeleteOutline sx={{ color: theme.palette.grey[700] }} />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n\nexport const UserMemoized = memo(User);\n","import { memo, useEffect, useState } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { theme } from '../../theme';\nimport { Navigation } from '../../components/navigation';\nimport { UserControl } from '../../components/user-control';\nimport { User } from '../../components/user';\nimport { Button } from '../../components/button';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { axiosInstance } from '../../utils/axios-instance';\n\nconst FriendsLayout = () => {\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const [usersMessages, setUsersMessages] = useState<any[]>();\n\n  useEffect(() => {\n    const getPersonalMessage = async () => {\n      const response = await axiosInstance.post('/get-personal-messages-channels');\n\n      setUsersMessages(response.data);\n    };\n\n    getPersonalMessage();\n  }, []);\n\n  useEffect(() => {\n    console.log('usersMessages', usersMessages);\n  }, [usersMessages]);\n\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: '72px 376px 1fr',\n        height: '100%',\n        backgroundColor: theme.palette.common.white,\n      }}\n    >\n      {/* Навигация */}\n      <Box sx={{ backgroundColor: theme.palette.grey[200] }}>\n        <Navigation />\n      </Box>\n      {/* Личные сообщения*/}\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateRows: '72px max-content 1fr 64px',\n          backgroundColor: theme.palette.grey[400],\n          overflow: 'hidden',\n        }}\n      >\n        {/* Заголовок  */}\n        <Box sx={{ padding: '24px 20px', borderBottom: `1px solid ${theme.palette.grey[600]}` }}>\n          <Typography variant=\"h6\">Личные сообщения</Typography>\n        </Box>\n        {/* Друзья */}\n        <Box sx={{ padding: '16px' }}>\n          <Button fullWidth variant=\"contained\" onClick={() => navigate('/friends')}>\n            Друзья\n          </Button>\n        </Box>\n        {/* Список сообщений от пользователей */}\n        <Box\n          sx={{\n            margin: '28px 4px',\n            overflowY: 'scroll',\n            '&::-webkit-scrollbar': {\n              width: '4px',\n            },\n            '&::-webkit-scrollbar-track': {\n              backgroundColor: 'none',\n            },\n            '&::-webkit-scrollbar-thumb': {\n              backgroundColor: theme.palette.grey[300],\n              border: `1px solid ${theme.palette.grey[500]}`,\n              borderRadius: '8px',\n            },\n          }}\n        >\n          <Box sx={{ display: 'grid', rowGap: '12px', padding: '0 4px' }}>\n            {usersMessages?.map((value: any) => {\n              return (\n                <User\n                  key={value.userData._id}\n                  id={value.userData._id}\n                  name={value.userData.name}\n                  status={value.userData.status}\n                  email={value.userData.email}\n                  channelId={value.value._id}\n                />\n              );\n            })}\n          </Box>\n        </Box>\n        {/* Управление пользователем */}\n        <UserControl />\n      </Box>\n      {/* Блок друзья */}\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateRows: '72px 1fr',\n          backgroundColor: theme.palette.grey[500],\n          overflow: 'hidden',\n        }}\n      >\n        {/* Навигация по разделу друзья */}\n        <Box\n          sx={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(2, max-content)',\n            columnGap: '24px',\n            padding: '16px 24px',\n            borderBottom: `1px solid ${theme.palette.grey[400]}`,\n            alignItems: 'center',\n          }}\n        >\n          <Typography variant=\"h6\">Друзья</Typography>\n          <Box\n            sx={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(5, max-content)',\n              columnGap: '8px',\n            }}\n          >\n            <Button\n              variant={pathname.includes('all-friends') ? 'contained' : 'outlined'}\n              color=\"primary\"\n              onClick={() => navigate('all-friends')}\n            >\n              Все друзья\n            </Button>\n            <Button\n              variant={pathname.includes('friends-online') ? 'contained' : 'outlined'}\n              color=\"primary\"\n              onClick={() => navigate('friends-online')}\n            >\n              В сети\n            </Button>\n            <Button\n              variant={pathname.includes('friends-invites') ? 'contained' : 'outlined'}\n              color=\"primary\"\n              onClick={() => navigate('friends-invites')}\n            >\n              Заявки\n            </Button>\n            <Button\n              variant={pathname.includes('friends-approvals') ? 'contained' : 'outlined'}\n              color=\"primary\"\n              onClick={() => navigate('friends-approvals')}\n            >\n              Ожидание\n            </Button>\n            <Button\n              variant={pathname.includes('add-to-friends') ? 'contained' : 'outlined'}\n              color=\"success\"\n              onClick={() => navigate('add-to-friends')}\n            >\n              Добавить в друзья\n            </Button>\n          </Box>\n        </Box>\n        {/* Содержимое вкладки */}\n        <Outlet />\n      </Box>\n    </Box>\n  );\n};\n\nexport const FriendsLayoutMemoized = memo(FriendsLayout);\n","import { memo } from 'react';\nimport { FriendsLayout } from '../../../../core/layouts/friends-layout';\n\nconst Friends = () => {\n  return <FriendsLayout />;\n};\n\nexport const FriendsMemoized = memo(Friends);\n"],"names":["NavigationMemoized","memo","navigate","Box","sx","display","rowGap","height","alignContent","padding","justifyContent","Tooltip","title","arrow","placement","backgroundColor","theme","cursor","borderRadius","width","onClick","Group","Dashboard","Divider","Settings","createSvgIcon","d","UserControlMemoized","userName","userId","userStatus","alignItems","columnGap","gridTemplateColumns","border","Badge","overlap","variant","anchorOrigin","vertical","horizontal","color","Avatar","Typography","slice","MicOff","VideocamOff","UserMemoized","name","status","channelId","socket","className","IconButton","DeleteOutline","FriendsLayoutMemoized","pathname","usersMessages","setUsersMessages","useState","useEffect","response","data","console","log","gridTemplateRows","overflow","borderBottom","fullWidth","margin","overflowY","map","value","key","userData","_id","id","email","includes","FriendsMemoized"],"sourceRoot":""}