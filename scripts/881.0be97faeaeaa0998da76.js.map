{"version":3,"file":"scripts/881.0be97faeaeaa0998da76.js","mappings":"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","sources":["webpack://video-calls/./src/core/components/navigation/navigation.tsx","webpack://video-calls/./node_modules/@mui/icons-material/esm/MicOff.js","webpack://video-calls/./node_modules/@mui/icons-material/esm/VideocamOff.js","webpack://video-calls/./src/core/components/user-control/user-control.tsx","webpack://video-calls/./src/core/layouts/channels-layout/channels-layout.tsx","webpack://video-calls/./src/modules/channels/pages/channels/channels.tsx"],"sourcesContent":["import { memo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Group, Dashboard, Settings } from '@mui/icons-material';\nimport { Box, Divider, Tooltip } from '@mui/material';\nimport { theme } from '../../theme';\n\nconst Navigation = () => {\n  const navigate = useNavigate();\n\n  //  TODO: Добавить Drawer компонент\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        rowGap: '24px',\n        height: '100%',\n        alignContent: 'start',\n        padding: '25px 16px',\n        justifyContent: 'center',\n      }}\n    >\n      <Box sx={{ display: 'grid', rowGap: '16px' }}>\n        <Tooltip title=\"Друзья\" arrow placement=\"right\">\n          <Box\n            sx={{\n              display: 'grid',\n              padding: '8px',\n              backgroundColor: theme.palette.grey[400],\n              cursor: 'pointer',\n              borderRadius: '8px',\n              justifyContent: 'center',\n              width: '40px',\n            }}\n            onClick={() => navigate('/friends')}\n          >\n            <Group />\n          </Box>\n        </Tooltip>\n        <Tooltip title=\"Каналы\" arrow placement=\"right\">\n          <Box\n            sx={{\n              display: 'grid',\n              padding: '8px',\n              backgroundColor: theme.palette.grey[400],\n              cursor: 'pointer',\n              borderRadius: '8px',\n              justifyContent: 'center',\n              width: '40px',\n            }}\n            onClick={() => navigate('/channels')}\n          >\n            <Dashboard />\n          </Box>\n        </Tooltip>\n      </Box>\n      <Divider />\n      <Tooltip title=\"Профиль\" arrow placement=\"right\">\n        <Box\n          sx={{\n            display: 'grid',\n            padding: '8px',\n            backgroundColor: theme.palette.grey[400],\n            cursor: 'pointer',\n            borderRadius: '8px',\n            justifyContent: 'center',\n            width: '40px',\n          }}\n          onClick={() => navigate('/profile')}\n        >\n          <Settings />\n        </Box>\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport const NavigationMemoized = memo(Navigation);\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 11h-1.7c0 .74-.16 1.43-.43 2.05l1.23 1.23c.56-.98.9-2.09.9-3.28zm-4.02.17c0-.06.02-.11.02-.17V5c0-1.66-1.34-3-3-3S9 3.34 9 5v.18l5.98 5.99zM4.27 3 3 4.27l6.01 6.01V11c0 1.66 1.33 3 2.99 3 .22 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.54-.9L19.73 21 21 19.73 4.27 3z\"\n}), 'MicOff');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m21 6.5-4 4V7c0-.55-.45-1-1-1H9.82L21 17.18V6.5zM3.27 2 2 3.27 4.73 6H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.21 0 .39-.08.54-.18L19.73 21 21 19.73 3.27 2z\"\n}), 'VideocamOff');","import { memo } from 'react';\nimport { Avatar, Badge, Box, colors, Typography } from '@mui/material';\nimport { theme } from '../../theme';\nimport { MicOff, Settings, VideocamOff } from '@mui/icons-material';\nimport { useSelector } from 'react-redux';\nimport { userIdSelector, userNameSelector, userStatusSelector } from '../../../modules/user/store/selectors';\n\nconst UserControl = () => {\n  const userName = useSelector(userNameSelector);\n  const userId = useSelector(userIdSelector);\n  const userStatus = useSelector(userStatusSelector);\n\n  return (\n    <Box sx={{ display: 'grid', alignItems: 'center', backgroundColor: theme.palette.grey[300], padding: '12px 20px' }}>\n      <Box sx={{ display: 'grid', columnGap: '8px', gridTemplateColumns: '40px 1fr 104px' }}>\n        {/* Аватар пользователя */}\n        <Box\n          sx={{\n            '.MuiBadge-badge': {\n              border: `1px solid ${theme.palette.common.white}`,\n            },\n            '.MuiBadge-colorSuccess': {\n              backgroundColor: theme.palette.success.light,\n            },\n            '.MuiBadge-colorError': {\n              backgroundColor: theme.palette.error.light,\n            },\n          }}\n        >\n          <Badge\n            overlap=\"circular\"\n            variant=\"dot\"\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n            color={userStatus === 'online' ? 'success' : 'error'}\n          >\n            <Avatar sx={{ backgroundColor: colors.deepPurple[500] }}></Avatar>\n          </Badge>\n        </Box>\n        {/* Имя пользователя */}\n        <Box>\n          <Typography variant=\"body2\">{userName}</Typography>\n          <Typography sx={{ color: theme.palette.grey[500] }} variant=\"caption\">\n            #{userId.slice(-4)}\n          </Typography>\n        </Box>\n        {/* Кнопки управления */}\n        <Box sx={{ display: 'grid', columnGap: '16px', gridTemplateColumns: 'repeat(3, 24px)', alignItems: 'center' }}>\n          <MicOff sx={{ color: theme.palette.grey[700] }} />\n          <VideocamOff sx={{ color: theme.palette.grey[700] }} />\n          <Settings sx={{ color: theme.palette.grey[700] }} />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport const UserControlMemoized = memo(UserControl);\n","import { memo } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { theme } from '../../theme';\nimport { Navigation } from '../../components/navigation';\nimport { UserControl } from '../../components/user-control';\n\nconst ChannelsLayout = () => {\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: '72px 376px 1fr',\n        height: '100%',\n        backgroundColor: theme.palette.common.white,\n      }}\n    >\n      {/* Навигация */}\n      <Box sx={{ backgroundColor: theme.palette.grey[200] }}>\n        <Navigation />\n      </Box>\n      {/* Личные сообщения*/}\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateRows: '72px 1fr 64px',\n          backgroundColor: theme.palette.grey[400],\n          overflow: 'hidden',\n        }}\n      >\n        {/* Заголовок  */}\n        <Box sx={{ padding: '24px 20px', borderBottom: `1px solid ${theme.palette.grey[600]}` }}>\n          <Typography variant=\"h6\">Каналы</Typography>\n        </Box>\n        {/* Список сообщений от пользователей */}\n        <Box sx={{ padding: '0 8px', margin: '28px 0', overflow: 'scroll' }}>\n          <Box sx={{ display: 'grid', rowGap: '12px' }}>\n            {Array.from(Array(25).keys()).map((value) => {\n              return <Box key={value} />;\n            })}\n          </Box>\n        </Box>\n        {/* Управление пользователем */}\n        <UserControl />\n      </Box>\n      {/* Блок текстовых сообщений или видеочата */}\n      <Box sx={{ backgroundColor: theme.palette.grey[600] }}></Box>\n    </Box>\n  );\n};\n\nexport const ChannelsLayoutMemoized = memo(ChannelsLayout);\n","import { memo } from 'react';\nimport { ChannelsLayout } from '../../../../core/layouts/channels-layout';\n\nconst Channels = () => {\n  return <ChannelsLayout />;\n};\n\nexport const ChannelsMemoized = memo(Channels);\n"],"names":["NavigationMemoized","memo","navigate","Box","sx","display","rowGap","height","alignContent","padding","justifyContent","Tooltip","title","arrow","placement","backgroundColor","theme","cursor","borderRadius","width","onClick","Group","Dashboard","Divider","Settings","createSvgIcon","d","UserControlMemoized","userName","userId","userStatus","alignItems","columnGap","gridTemplateColumns","border","Badge","overlap","variant","anchorOrigin","vertical","horizontal","color","Avatar","Typography","slice","MicOff","VideocamOff","ChannelsLayoutMemoized","gridTemplateRows","overflow","borderBottom","margin","Array","from","keys","map","value","key","ChannelsMemoized"],"sourceRoot":""}