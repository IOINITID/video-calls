{"version":3,"file":"scripts/494.a3a1f634b2fd16e43d4a.js","mappings":"ufAOA,MAmFaA,GAA2B,IAAAC,OAnFf,EAAGC,GAAAA,EAAIC,KAAAA,EAAMC,OAAAA,KAElC,gBAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,oBAAqB,kBACrBC,WAAY,WAGd,gBAACJ,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,oBAAqB,kBACrBE,UAAW,MACXD,WAAY,SACZE,QAAS,WACTC,aAAc,MACdC,OAAQ,UACR,kBAAmB,CACjBC,OAAQ,aAAaC,EAAA,0BAEvB,yBAA0B,CACxBC,gBAAiBD,EAAA,yBAEnB,uBAAwB,CACtBC,gBAAiBD,EAAA,yBAIrB,gBAACE,EAAA,EAAD,CACEC,QAAQ,WACRC,QAAQ,MACRC,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDC,MAAkB,WAAXnB,EAAsB,UAAY,SAEzC,gBAACoB,EAAA,EAAD,CAAQlB,GAAI,CAAEU,gBAAiB,aAEjC,gBAACX,EAAA,EAAD,CAAKC,GAAI,CAAEC,QAAS,OAAQC,oBAAqB,gBAC/C,gBAACiB,EAAA,EAAD,CAAYN,QAAQ,SAAShB,GAAc,IAC3C,gBAACsB,EAAA,EAAD,CAAYN,QAAQ,WAAsB,WAAXf,EAAsB,SAAW,eAIpE,gBAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,oBAAqB,yBACrBE,UAAW,OACXD,WAAY,SACZiB,eAAgB,QAGlB,gBAAC,IAAD,CACEP,QAAQ,YACRI,MAAM,UACNI,QAAS,IAAY,2BACnB,MAAMC,QAAiB,SAAmB,kBAAmB,CAAEC,SAAU3B,IAIzE,OAFA4B,EAAA,OAAY,oBAAqB5B,GAE1B0B,EAASG,SAEnB,YAGD,gBAAC,IAAD,CACEZ,QAAQ,YACRI,MAAM,UACNI,QAAS,IAAY,2BACnB,MAAMC,QAAiB,SAAmB,4BAA6B,CAAEC,SAAU3B,IAInF,OAFA4B,EAAA,OAAY,8BAA+B5B,GAEpC0B,EAASG,SAEnB,iB,cC3ET,MAgCaC,GAAyB,IAAA/B,OAhCf,KACrB,MAAMgC,GAAU,QAAY,MAE5B,OACE,gBAAC5B,EAAA,EAAD,CACEC,GAAI,CACFK,QAAS,eACTuB,OAAQ,kBACR3B,QAAS,OACT4B,aAAc,QACdC,OAAQ,MACRC,UAAW,SACX,uBAAwB,CACtBC,MAAO,OAET,6BAA8B,CAC5BtB,gBAAiB,QAEnB,6BAA8B,CAC5BA,gBAAiBD,EAAA,oBACjBD,OAAQ,aAAaC,EAAA,sBACrBH,aAAc,SAIjBqB,EAAQM,KAAKC,GACL,gBAAC,EAAD,CAAkBC,IAAKD,EAAOE,IAAKxC,GAAIsC,EAAOE,IAAKvC,KAAMqC,EAAOrC,KAAMC,OAAQoC,EAAOpC","sources":["webpack://video-calls/./src/core/components/user-add-to-friends/user-add-to-friends.tsx","webpack://video-calls/./src/core/components/friends-invites/friends-invites.tsx"],"sourcesContent":["import { Avatar, Badge, Box, colors, Typography } from '@mui/material';\nimport { memo } from 'react';\nimport { theme } from '../../theme';\nimport { axiosInstance } from '../../utils/axios-instance';\nimport { socket } from '../../utils/socket';\nimport { Button } from '../button';\n\nconst UserAddToFriends = ({ id, name, status }: { id: string; name: string; status: string }) => {\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: 'max-content 1fr',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: 'max-content 1fr',\n          columnGap: '8px',\n          alignItems: 'center',\n          padding: '8px 12px',\n          borderRadius: '8px',\n          cursor: 'pointer',\n          '.MuiBadge-badge': {\n            border: `1px solid ${theme.palette.common.white}`,\n          },\n          '.MuiBadge-colorSuccess': {\n            backgroundColor: theme.palette.success.light,\n          },\n          '.MuiBadge-colorError': {\n            backgroundColor: theme.palette.error.light,\n          },\n        }}\n      >\n        <Badge\n          overlap=\"circular\"\n          variant=\"dot\"\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n          color={status === 'online' ? 'success' : 'error'}\n        >\n          <Avatar sx={{ backgroundColor: colors.deepPurple[500] }} />\n        </Badge>\n        <Box sx={{ display: 'grid', gridTemplateColumns: 'max-content' }}>\n          <Typography variant=\"body2\">{name ? name : ''}</Typography>\n          <Typography variant=\"caption\">{status === 'online' ? 'В сети' : 'Не в сети'}</Typography>\n        </Box>\n      </Box>\n      {/* Кнопки взаимодействия с пользователем */}\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(2, max-content)',\n          columnGap: '24px',\n          alignItems: 'center',\n          justifyContent: 'end',\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={async () => {\n            const response = await axiosInstance.post('/add-to-friends', { friendId: id });\n\n            socket.emit('on-add-to-friends', id); // Отправка события пользователю который ждет принятие приглашения\n\n            return response.data;\n          }}\n        >\n          Добавить\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={async () => {\n            const response = await axiosInstance.post('/remove-invite-to-friends', { friendId: id });\n\n            socket.emit('on-remove-invite-to-friends', id); // Отправка события пользователю который ждет принятия или отклонения приглашения\n\n            return response.data;\n          }}\n        >\n          Отклонить\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport const UserAddToFriendsMemoized = memo(UserAddToFriends);\n","import { useSelector } from 'react-redux';\nimport { Box } from '@mui/material';\nimport { theme } from '../../theme';\nimport { memo } from 'react';\nimport { userInvitesSelector } from '../../../modules/user/store/selectors';\nimport { UserAddToFriends } from '../user-add-to-friends';\n\nconst FriendsInvites = () => {\n  const invites = useSelector(userInvitesSelector);\n\n  return (\n    <Box\n      sx={{\n        padding: '0 8px 0 16px',\n        margin: '16px 8px 16px 0',\n        display: 'grid',\n        alignContent: 'start',\n        rowGap: '8px',\n        overflowY: 'scroll',\n        '&::-webkit-scrollbar': {\n          width: '4px',\n        },\n        '&::-webkit-scrollbar-track': {\n          backgroundColor: 'none',\n        },\n        '&::-webkit-scrollbar-thumb': {\n          backgroundColor: theme.palette.grey[300],\n          border: `1px solid ${theme.palette.grey[500]}`,\n          borderRadius: '8px',\n        },\n      }}\n    >\n      {invites.map((invite) => {\n        return <UserAddToFriends key={invite._id} id={invite._id} name={invite.name} status={invite.status} />;\n      })}\n    </Box>\n  );\n};\n\nexport const FriendsInvitesMemoized = memo(FriendsInvites);\n"],"names":["UserAddToFriendsMemoized","memo","id","name","status","Box","sx","display","gridTemplateColumns","alignItems","columnGap","padding","borderRadius","cursor","border","theme","backgroundColor","Badge","overlap","variant","anchorOrigin","vertical","horizontal","color","Avatar","Typography","justifyContent","onClick","response","friendId","socket","data","FriendsInvitesMemoized","invites","margin","alignContent","rowGap","overflowY","width","map","invite","key","_id"],"sourceRoot":""}