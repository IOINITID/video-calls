{"version":3,"file":"scripts/483.507807e1daf2ea65940d.js","mappings":"6JAUe,SAASA,EAAiBC,EAAaC,EAAgB,GAAIC,GACxE,OAAI,OAAgBF,GACXC,GAGF,OAAS,GAAIA,EAAe,CACjCC,YAAY,OAAS,GAAID,EAAcC,WAAYA,O,wICVvD,MAsEaC,GAAqB,IAAAC,OAtEf,KACjB,MAAMC,GAAW,UAGjB,OACE,gBAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,OAAQ,OACRC,OAAQ,OACRC,aAAc,QACdC,QAAS,YACTC,eAAgB,WAGlB,gBAACP,EAAA,EAAD,CAAKC,GAAI,CAAEC,QAAS,OAAQC,OAAQ,SAClC,gBAACK,EAAA,EAAD,CAASC,MAAM,SAASC,OAAK,EAACC,UAAU,SACtC,gBAACX,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTI,QAAS,MACTM,gBAAiBC,EAAA,oBACjBC,OAAQ,UACRC,aAAc,MACdR,eAAgB,SAChBS,MAAO,QAETC,QAAS,IAAMlB,EAAS,aAExB,gBAACmB,EAAA,EAAD,QAGJ,gBAACV,EAAA,EAAD,CAASC,MAAM,SAASC,OAAK,EAACC,UAAU,SACtC,gBAACX,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTI,QAAS,MACTM,gBAAiBC,EAAA,oBACjBC,OAAQ,UACRC,aAAc,MACdR,eAAgB,SAChBS,MAAO,QAETC,QAAS,IAAMlB,EAAS,cAExB,gBAACoB,EAAA,EAAD,SAIN,gBAACC,EAAA,EAAD,MACA,gBAACZ,EAAA,EAAD,CAASC,MAAM,UAAUC,OAAK,EAACC,UAAU,SACvC,gBAACX,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTI,QAAS,MACTM,gBAAiBC,EAAA,oBACjBC,OAAQ,UACRC,aAAc,MACdR,eAAgB,SAChBS,MAAO,QAETC,QAAS,IAAMlB,EAAS,aAExB,gBAACsB,EAAA,EAAD,a,sLC3DV,MAsDaC,GAAkB,IAAAxB,OAtDf,KACd,MAAMC,GAAW,UACXwB,GAAW,UAEXC,GAAY,QAAY,MACxBC,GAAW,QAAY,MACvBC,GAAS,QAAY,MAE3B,OACE,gBAAC1B,EAAA,EAAD,CACEC,GAAI,CACF0B,SAAU,QACVC,IAAK,IACLC,KAAM,IACN3B,QAAS,OACT4B,oBAAqB,kBACrBd,MAAO,OACPZ,OAAQ,OACRC,aAAc,UAGhB,gBAAC,IAAD,MACA,gBAACL,EAAA,EAAD,KACE,gBAAC+B,EAAA,EAAD,CAAYC,QAAQ,MAAK,cAAYR,GACrC,gBAACO,EAAA,EAAD,CAAYC,QAAQ,MAAK,aAAWP,GAEpC,gBAACM,EAAA,EAAD,CAAYC,QAAQ,MAAK,eAEzB,gBAACD,EAAA,EAAD,CAAYC,QAAQ,MAAK,WAEzB,gBAACD,EAAA,EAAD,CAAYC,QAAQ,MAAK,kBAEzB,gBAACD,EAAA,EAAD,CAAYC,QAAQ,MAAK,eACzB,gBAACD,EAAA,EAAD,CAAYC,QAAQ,MAClB,gBAACC,EAAA,EAAD,CAAMhC,GAAI,CAAEa,OAAQ,WAAaoB,UAAU,QAAQjB,QAAS,IAAMlB,GAAU,IAAI,SAGhF,gBAAC,IAAD,CACEiC,QAAQ,YACRG,MAAM,UACNlB,QAAS,KACPM,GAAS,WAETa,EAAA,OAAY,gBAAiBV,KAEhC","sources":["webpack://video-calls/./node_modules/@mui/base/utils/appendOwnerState.js","webpack://video-calls/./src/core/components/navigation/navigation.tsx","webpack://video-calls/./src/modules/profile/pages/profile/profile.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport isHostComponent from './isHostComponent';\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node, `ownerState` are not applied.\n * @param existingProps Props of the element.\n * @param ownerState\n */\n\nexport default function appendOwnerState(elementType, existingProps = {}, ownerState) {\n  if (isHostComponent(elementType)) {\n    return existingProps;\n  }\n\n  return _extends({}, existingProps, {\n    ownerState: _extends({}, existingProps.ownerState, ownerState)\n  });\n}","import { memo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Group, Dashboard, Settings } from '@mui/icons-material';\nimport { Box, Divider, Tooltip } from '@mui/material';\nimport { theme } from '../../theme';\n\nconst Navigation = () => {\n  const navigate = useNavigate();\n\n  //  TODO: Добавить Drawer компонент\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        rowGap: '24px',\n        height: '100%',\n        alignContent: 'start',\n        padding: '25px 16px',\n        justifyContent: 'center',\n      }}\n    >\n      <Box sx={{ display: 'grid', rowGap: '16px' }}>\n        <Tooltip title=\"Друзья\" arrow placement=\"right\">\n          <Box\n            sx={{\n              display: 'grid',\n              padding: '8px',\n              backgroundColor: theme.palette.grey[400],\n              cursor: 'pointer',\n              borderRadius: '8px',\n              justifyContent: 'center',\n              width: '40px',\n            }}\n            onClick={() => navigate('/friends')}\n          >\n            <Group />\n          </Box>\n        </Tooltip>\n        <Tooltip title=\"Каналы\" arrow placement=\"right\">\n          <Box\n            sx={{\n              display: 'grid',\n              padding: '8px',\n              backgroundColor: theme.palette.grey[400],\n              cursor: 'pointer',\n              borderRadius: '8px',\n              justifyContent: 'center',\n              width: '40px',\n            }}\n            onClick={() => navigate('/channels')}\n          >\n            <Dashboard />\n          </Box>\n        </Tooltip>\n      </Box>\n      <Divider />\n      <Tooltip title=\"Профиль\" arrow placement=\"right\">\n        <Box\n          sx={{\n            display: 'grid',\n            padding: '8px',\n            backgroundColor: theme.palette.grey[400],\n            cursor: 'pointer',\n            borderRadius: '8px',\n            justifyContent: 'center',\n            width: '40px',\n          }}\n          onClick={() => navigate('/profile')}\n        >\n          <Settings />\n        </Box>\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport const NavigationMemoized = memo(Navigation);\n","import { memo } from 'react';\nimport { Box, Typography, Link } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userEmailSelector, userIdSelector, userNameSelector } from '../../../user/store/selectors';\nimport { useNavigate } from 'react-router-dom';\nimport { Navigation } from '../../../../core/components/navigation';\nimport { Button } from '../../../../core/components/button';\nimport { logoutAction } from '../../../user/store/actions';\nimport { socket } from '../../../../core/utils/socket';\n\nconst Profile = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const userEmail = useSelector(userEmailSelector);\n  const userName = useSelector(userNameSelector);\n  const userId = useSelector(userIdSelector);\n\n  return (\n    <Box\n      sx={{\n        position: 'fixed',\n        top: '0',\n        left: '0',\n        display: 'grid',\n        gridTemplateColumns: 'max-content 1fr',\n        width: '100%',\n        height: '100%',\n        alignContent: 'start',\n      }}\n    >\n      <Navigation />\n      <Box>\n        <Typography variant=\"h5\">Ваш email: {userEmail}</Typography>\n        <Typography variant=\"h5\">Ваше имя: {userName}</Typography>\n        {/* TODO: Нужен пароль (скрытый или последние символы) */}\n        <Typography variant=\"h5\">Ваш пароль:</Typography>\n        {/* TODO: Нужен статус */}\n        <Typography variant=\"h5\">Статус:</Typography>\n        {/* TODO: Нужна дата рождения */}\n        <Typography variant=\"h5\">Дата рождения:</Typography>\n        {/* TODO: Нужен аватар */}\n        <Typography variant=\"h5\">Ваш аватар:</Typography>\n        <Typography variant=\"h5\">\n          <Link sx={{ cursor: 'pointer' }} underline=\"hover\" onClick={() => navigate(-1)}>\n            Назад\n          </Link>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              dispatch(logoutAction());\n\n              socket.emit('on-disconnect', userId);\n            }}\n          >\n            Выйти из аккаунта\n          </Button>\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport const ProfileMemoized = memo(Profile);\n"],"names":["appendOwnerState","elementType","existingProps","ownerState","NavigationMemoized","memo","navigate","Box","sx","display","rowGap","height","alignContent","padding","justifyContent","Tooltip","title","arrow","placement","backgroundColor","theme","cursor","borderRadius","width","onClick","Group","Dashboard","Divider","Settings","ProfileMemoized","dispatch","userEmail","userName","userId","position","top","left","gridTemplateColumns","Typography","variant","Link","underline","color","socket"],"sourceRoot":""}