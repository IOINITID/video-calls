{"version":3,"file":"scripts/main.909219a1bff38a7cb741.js","mappings":"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","sources":["webpack://video-calls/webpack/runtime/chunk loaded","webpack://video-calls/./src/core/constants/index.ts","webpack://video-calls/./src/modules/authorization/store/index.ts","webpack://video-calls/./src/core/utils/axios-instance.ts","webpack://video-calls/./src/core/services/add-message-to-channel.ts","webpack://video-calls/./src/core/services/get-approvals.ts","webpack://video-calls/./src/core/services/get-channel-messages.ts","webpack://video-calls/./src/core/services/get-channels.ts","webpack://video-calls/./src/core/services/get-invites.ts","webpack://video-calls/./src/modules/friends/store/actions.ts","webpack://video-calls/./src/modules/friends/services/get-friends-service.ts","webpack://video-calls/./src/modules/user/store/index.ts","webpack://video-calls/./src/modules/user/services/constants/index.ts","webpack://video-calls/./src/modules/user/services/index.ts","webpack://video-calls/./src/modules/user/sagas/index.ts","webpack://video-calls/./src/modules/authorization/services/constants/index.ts","webpack://video-calls/./src/modules/authorization/services/index.ts","webpack://video-calls/./src/modules/authorization/sagas/index.ts","webpack://video-calls/./src/core/store/sagas.ts","webpack://video-calls/./src/core/store/index.ts","webpack://video-calls/./src/core/components/text-field/text-field.tsx","webpack://video-calls/./src/core/theme/index.ts","webpack://video-calls/./src/core/assets/images/authorization-image.jpg","webpack://video-calls/./src/core/layouts/authorization-layout/authorization-layout.tsx","webpack://video-calls/./src/modules/authorization/pages/authorization/authorization.tsx","webpack://video-calls/./src/modules/authorization/pages/registration/registration.tsx","webpack://video-calls/./src/core/routes/public-routes/public-routes.tsx","webpack://video-calls/./src/core/components/button/button.tsx","webpack://video-calls/./src/core/components/navigation/navigation.tsx","webpack://video-calls/./src/core/utils/socket.ts","webpack://video-calls/./src/modules/user/store/selectors.ts","webpack://video-calls/./src/core/components/user/user.tsx","webpack://video-calls/./src/core/components/user-control/user-control.tsx","webpack://video-calls/./src/modules/friends/pages/friends/friends.tsx","webpack://video-calls/./src/core/components/messages/messages.tsx","webpack://video-calls/./src/modules/user/pages/settings/components/user-settings/user-settings.tsx","webpack://video-calls/./src/modules/user/pages/settings/settings.tsx","webpack://video-calls/./src/core/layouts/channels-layout/channels-layout.tsx","webpack://video-calls/./src/modules/channels/pages/channels/channels.tsx","webpack://video-calls/./src/core/components/user-friends/user-friends.tsx","webpack://video-calls/./src/core/components/all-friends/all-friends.tsx","webpack://video-calls/./src/core/components/friends-online/friends-online.tsx","webpack://video-calls/./src/core/components/user-add-to-friends/user-add-to-friends.tsx","webpack://video-calls/./src/core/components/friends-invites/friends-invites.tsx","webpack://video-calls/./src/core/components/user-approvals/user-approvals.tsx","webpack://video-calls/./src/core/components/friends-approvals/friends-approvals.tsx","webpack://video-calls/./src/core/components/user-add-invite-to-friends/user-add-invite-to-friends.tsx","webpack://video-calls/./src/core/components/add-to-friends/add-to-friends.tsx","webpack://video-calls/./src/modules/user/pages/settings/components/user-profile/user-profile.tsx","webpack://video-calls/./src/modules/user/hooks/index.ts","webpack://video-calls/./src/modules/user/pages/settings/modals/modal-change-user-email.tsx","webpack://video-calls/./src/modules/user/pages/settings/modals/modal-change-user-name.tsx","webpack://video-calls/./src/modules/user/pages/settings/components/user-account/user-account.tsx","webpack://video-calls/./src/modules/user/utils/index.ts","webpack://video-calls/./src/modules/user/pages/settings/components/voice-and-video/voice-and-video.tsx","webpack://video-calls/./src/core/routes/private-routes/private-routes.tsx","webpack://video-calls/./src/core/components/app/app.tsx","webpack://video-calls/./src/core/containers/app-container/app-container.tsx","webpack://video-calls/./src/index.tsx","webpack://video-calls/webpack/bootstrap","webpack://video-calls/webpack/runtime/compat get default export","webpack://video-calls/webpack/runtime/define property getters","webpack://video-calls/webpack/runtime/global","webpack://video-calls/webpack/runtime/hasOwnProperty shorthand","webpack://video-calls/webpack/runtime/make namespace object","webpack://video-calls/webpack/runtime/publicPath","webpack://video-calls/webpack/runtime/jsonp chunk loading","webpack://video-calls/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","export const DeviceWidth = {\n  Desktop: 1440,\n  Tablet: 768,\n  Mobile: 320,\n};\n\nexport const Retina = {\n  Dppx: 1.5,\n  Dpi: 144,\n};\n\nexport const API_URL =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:8080'\n    : 'https://ioinitid-video-calls-server.herokuapp.com';\n\nexport const APPLICATION_URL =\n  process.env.NODE_ENV === 'development' ? 'http://localhost:3000' : 'https://ioinitid.github.io/video-calls';\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { Authorization } from '../services/types';\nimport { AuthorizationState } from './types';\n\nconst initialState: AuthorizationState = {\n  access_token: '',\n  authorizated: false,\n  loading: {\n    access_token: false,\n  },\n  error: {\n    access_token: null,\n  },\n};\n\nexport const authorizationSlice = createSlice({\n  name: 'authorization',\n  initialState,\n  reducers: {\n    requestRegistrationAction: (\n      state: AuthorizationState,\n      { payload }: PayloadAction<{ email: string; name: string; password: string }>\n    ) => {\n      state.loading.access_token = true;\n    },\n    successRegistrationAction: (state: AuthorizationState, { payload }: PayloadAction<Authorization>) => {\n      const { access_token } = payload;\n\n      state.access_token = access_token;\n      state.authorizated = true;\n      state.loading.access_token = false;\n\n      localStorage.setItem('access_token', access_token);\n    },\n    failureRegistrationAction: (state: AuthorizationState, { payload }: PayloadAction<any | null>) => {\n      const { error } = payload;\n\n      const getError = (error: unknown) => {\n        if (axios.isAxiosError(error)) {\n          if (error.response) {\n            return error.response.data;\n          }\n        }\n      };\n\n      state.error.access_token = getError(error);\n      state.loading.access_token = false;\n    },\n    requestAuthorizationAction: (\n      state: AuthorizationState,\n      { payload }: PayloadAction<{ email: string; password: string }>\n    ) => {\n      state.loading.access_token = true;\n    },\n    successAuthorizationAction: (state: AuthorizationState, { payload }: PayloadAction<Authorization>) => {\n      const { access_token } = payload;\n\n      state.access_token = access_token;\n      state.authorizated = true;\n      state.loading.access_token = false;\n\n      localStorage.setItem('access_token', access_token);\n    },\n    failureAuthorizationAction: (state: AuthorizationState, { payload }: PayloadAction<any | null>) => {\n      const { error } = payload;\n\n      const getError = (error: unknown) => {\n        if (axios.isAxiosError(error)) {\n          if (error.response) {\n            return error.response.data;\n          }\n        }\n      };\n\n      state.error.access_token = getError(error);\n      state.loading.access_token = false;\n\n      // if (axios.isAxiosError(error)) {\n      //   toast.error(error.response?.data.message); // TODO: Добавить тип для ошибки\n      // } else {\n      //   toast.error(error.message || 'Ошибка авторизации. Проверьте логин и пароль.');\n      // }\n    },\n    requestRefreshAction: (state: AuthorizationState) => {\n      state.loading.access_token = true;\n    },\n    successRefreshAction: (state: AuthorizationState, { payload }: PayloadAction<Authorization>) => {\n      const { access_token } = payload;\n\n      state.access_token = access_token;\n      state.authorizated = true;\n      state.loading.access_token = false;\n\n      localStorage.setItem('access_token', access_token);\n    },\n    failureRefreshAction: (state: AuthorizationState, { payload }: PayloadAction<any | null>) => {\n      const { error } = payload;\n\n      state.error.access_token = error;\n      state.loading.access_token = false;\n      state.authorizated = false;\n      state.access_token = '';\n\n      localStorage.removeItem('access_token');\n\n      location.reload();\n\n      // if (axios.isAxiosError(error)) {\n      //   toast.error(error.response?.data.message); // TODO: Добавить тип для ошибки\n      // } else {\n      //   toast.error(error.message || 'Ошибка авторизации. Проверьте логин и пароль.');\n      // }\n\n      // TODO: Может и не нужна saga, все будет в axios response interceptor\n      // if (error.response.status === 401) {\n      //   localStorage.removeItem('access_token');\n      // }\n    },\n    requestLogoutAction: (state: AuthorizationState) => {\n      state.loading.access_token = true;\n    },\n    successLogoutAction: (state: AuthorizationState) => {\n      state.access_token = '';\n      state.authorizated = false;\n      state.loading.access_token = false;\n      state.error.access_token = null;\n\n      localStorage.removeItem('access_token');\n    },\n    failureLogoutAction: (state: AuthorizationState, { payload }: PayloadAction<any | null>) => {\n      const { error } = payload;\n\n      state.error.access_token = error;\n      state.loading.access_token = false;\n\n      if (axios.isAxiosError(error)) {\n        toast.error(error.response?.data.message); // TODO: Добавить тип для ошибки\n      } else {\n        toast.error(error.message || 'Ошибка авторизации. Проверьте логин и пароль.');\n      }\n    },\n  },\n});\n\nexport const {\n  requestRegistrationAction,\n  successRegistrationAction,\n  failureRegistrationAction,\n  requestAuthorizationAction,\n  successAuthorizationAction,\n  failureAuthorizationAction,\n  requestRefreshAction,\n  successRefreshAction,\n  failureRefreshAction,\n  requestLogoutAction,\n  successLogoutAction,\n  failureLogoutAction,\n} = authorizationSlice.actions;\n\nexport const authorizationReducer = authorizationSlice.reducer;\n","import axios from 'axios';\nimport { refreshService } from 'modules/authorization/services';\nimport { API_URL } from '../constants';\nimport { store } from 'core/store';\nimport { successRefreshAction, failureRefreshAction, requestRefreshAction } from 'modules/authorization/store';\n\nconst axiosInstance = axios.create({\n  withCredentials: true,\n  baseURL: `${API_URL}/api`,\n});\n\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // NOTE: Что то сделать до того как запрос отправится\n    if (config.headers) {\n      config.headers.Authorization = `Bearer ${localStorage.getItem('access_token') || ''}`;\n    }\n\n    return config;\n  },\n  (error) => {\n    // NOTE: Что то сделать с ошибкой запроса\n    return Promise.reject(error);\n  }\n);\n\naxiosInstance.interceptors.response.use(\n  (config) => {\n    // NOTE: Любой из статус кодов в диапазоне 2xx\n    // NOTE: Что то сделать с данными ответа\n    return config;\n  },\n  async (error) => {\n    // NOTE: Любой из статус кодов в диапазоне за пределами 2xx\n    // NOTE: Что то сделать с ошибкой ответа\n\n    const originalConfig = error.config;\n\n    if (error.response) {\n      if (error.response.status === 401 && !originalConfig._retry) {\n        originalConfig._retry = true;\n\n        try {\n          store.dispatch(requestRefreshAction());\n        } catch (error) {\n          store.dispatch(failureRefreshAction(error));\n        }\n\n        return axiosInstance(originalConfig);\n      }\n\n      if (error.response.status !== 401) {\n        return Promise.reject(error.response.data);\n      }\n    }\n\n    return Promise.reject(error);\n\n    // NOTE: Релизация до обновления\n    // const originalConfig = error.config;\n\n    // if (error.response.status === 401 && !isRetry) {\n    //   try {\n    //     const response = await refreshService();\n\n    //     isRetry = true;\n\n    //     store.dispatch(successRefreshAction({ access_token: response.data.access_token }));\n\n    //     localStorage.setItem('access_token', response.data.access_token);\n\n    //     return axiosInstance.request(originalRequest);\n    //   } catch (error) {\n    //     console.log(error);\n\n    //     isRetry = false;\n\n    //     await logoutService();\n\n    //     localStorage.removeItem('access_token');\n    //   }\n    // }\n\n    // throw error;\n  }\n);\n\nexport { axiosInstance };\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { axiosInstance } from '../utils/axios-instance';\n\nexport const addMessageToChannel = createAsyncThunk(\n  'user/addMessageToChannel',\n  async ({ channel, message }: { channel: string; message: string }) => {\n    const response = await axiosInstance.post('/add-message-to-channel', { channel, message });\n\n    return response.data;\n  }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { axiosInstance } from '../utils/axios-instance';\n\nexport const getApprovals = createAsyncThunk('user/getApprovals', async () => {\n  const response = await axiosInstance.get('/approvals');\n\n  return response.data;\n});\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { axiosInstance } from '../utils/axios-instance';\n\nexport const getChannelMessages = createAsyncThunk(\n  'user/getChannelMessages',\n  async ({ channel }: { channel: string }) => {\n    const response = await axiosInstance.post('/get-channel-messages', { channel });\n\n    return response.data;\n  }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { axiosInstance } from '../utils/axios-instance';\n\nexport const getChannels = createAsyncThunk('user/getChannels', async () => {\n  const response = await axiosInstance.get('/get-channels');\n\n  return response.data;\n});\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { axiosInstance } from '../utils/axios-instance';\n\nexport const getInvites = createAsyncThunk('user/getInvites', async () => {\n  const response = await axiosInstance.get('/invites');\n\n  return response.data;\n});\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { getFriendsService } from '../services';\n\nexport const getFriendsAction = createAsyncThunk('user/getFriendsAction', getFriendsService);\n","import { axiosInstance } from '../../../core/utils/axios-instance';\n\nconst getFriendsService = async () => {\n  const response = await axiosInstance.get('/friends');\n\n  return response.data;\n};\n\nexport { getFriendsService };\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { addMessageToChannel } from 'core/services/add-message-to-channel';\nimport { getApprovals } from 'core/services/get-approvals';\nimport { getChannelMessages } from 'core/services/get-channel-messages';\nimport { getChannels } from 'core/services/get-channels';\nimport { getInvites } from 'core/services/get-invites';\nimport { getFriendsAction } from 'modules/friends/store/actions';\nimport { User } from '../services/types';\nimport { ChannelResponse, MessageResponse, UserState } from './types';\n\nconst initialState: UserState = {\n  user: undefined,\n  users: undefined,\n  loading: {\n    user: false,\n    users: false,\n  },\n  error: {\n    user: null,\n    users: null,\n  },\n  audioInDevice: '',\n  audioOutDevice: '',\n  // TODO: Обновление store\n  friends: [],\n  invites: [],\n  approvals: [],\n  isCall: false,\n  isIncomingCall: false,\n  isCallAccepted: false,\n  isCallCanceled: false,\n  channels: [],\n  channelMessages: [],\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    // NOTE: Получение пользователя\n    requestGetUserAction: (state: UserState) => {\n      state.loading.user = true;\n    },\n    successGetUserAction: (state: UserState, { payload }: PayloadAction<User | undefined>) => {\n      state.user = payload;\n      state.loading.user = false;\n    },\n    failureGetUserAction: (state: UserState, { payload }: PayloadAction<any | null>) => {\n      state.error.user = payload;\n      state.loading.user = false;\n    },\n    // NOTE: Обновление пользователя\n    requestUpdateUserAction: (state: UserState, { payload }: PayloadAction<Partial<User & { password: string }>>) => {\n      state.loading.user = true;\n    },\n    successUpdateUserAction: (state: UserState, { payload }: PayloadAction<User>) => {\n      state.user = payload;\n      state.loading.user = false;\n    },\n    failureUpdateUserAction: (state: UserState, { payload }: PayloadAction<any | null>) => {\n      state.error.user = payload;\n      state.loading.user = false;\n    },\n    // NOTE: Получение списка пользователей\n    requestGetUsersAction: (state: UserState) => {\n      state.loading.users = true;\n    },\n    successGetUsersAction: (state: UserState, { payload }: PayloadAction<User[]>) => {\n      state.users = payload;\n      state.loading.users = false;\n    },\n    failureGetUsersAction: (state: UserState, { payload }: PayloadAction<any | null>) => {\n      state.error.users = payload;\n      state.loading.users = false;\n    },\n    setIsCall: (state: UserState, { payload }: PayloadAction<boolean>) => {\n      state.isCall = payload;\n    },\n    setIsIncomingCall: (state: UserState, { payload }: PayloadAction<boolean>) => {\n      state.isIncomingCall = payload;\n    },\n    setIsCallAccepted: (state: UserState, { payload }: PayloadAction<boolean>) => {\n      state.isCallAccepted = payload;\n    },\n    setIsCallCanceled: (state: UserState, { payload }: PayloadAction<boolean>) => {\n      state.isCallCanceled = payload;\n    },\n    setAudioInDevice: (state: UserState, { payload }: PayloadAction<string>) => {\n      state.audioInDevice = payload;\n    },\n    setAudioOutDevice: (state: UserState, { payload }: PayloadAction<string>) => {\n      state.audioOutDevice = payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getFriendsAction.fulfilled, (state: UserState, { payload }: PayloadAction<User[]>) => {\n      state.friends = payload;\n    });\n    builder.addCase(getInvites.fulfilled, (state: UserState, { payload }: PayloadAction<User[]>) => {\n      state.invites = payload;\n    });\n    builder.addCase(getApprovals.fulfilled, (state: UserState, { payload }: PayloadAction<User[]>) => {\n      state.approvals = payload;\n    });\n    builder.addCase(getChannels.fulfilled, (state: UserState, { payload }: PayloadAction<ChannelResponse[]>) => {\n      state.channels = payload;\n    });\n    builder.addCase(getChannelMessages.fulfilled, (state: UserState, { payload }: PayloadAction<MessageResponse[]>) => {\n      state.channelMessages = payload;\n    });\n    builder.addCase(addMessageToChannel.fulfilled, (state: UserState, { payload }: PayloadAction<MessageResponse>) => {\n      state.channelMessages = [...state.channelMessages, payload];\n    });\n  },\n});\n\nexport const {\n  setIsCall,\n  setIsIncomingCall,\n  setIsCallAccepted,\n  setIsCallCanceled,\n  requestGetUserAction,\n  successGetUserAction,\n  failureGetUserAction,\n  requestUpdateUserAction,\n  successUpdateUserAction,\n  failureUpdateUserAction,\n  setAudioInDevice,\n  setAudioOutDevice,\n  requestGetUsersAction,\n  successGetUsersAction,\n  failureGetUsersAction,\n} = userSlice.actions;\n\nexport const userReducer = userSlice.reducer;\n","export const ApiUrl = {\n  User: '/user',\n  Users: '/users',\n};\n","import { axiosInstance } from 'core/utils/axios-instance';\nimport { requestUpdateUserAction } from '../store';\nimport { ApiUrl } from './constants';\nimport { User } from './types';\n\n/**\n * Service для получения данных пользователя.\n */\nexport const getUserService = () => {\n  return axiosInstance.request<User>({\n    method: 'GET',\n    url: ApiUrl.User,\n  });\n};\n\n/**\n * Service для обновления данных пользователя.\n */\nexport const updateUserService = (params: ReturnType<typeof requestUpdateUserAction>['payload']) => {\n  return axiosInstance.request<User>({\n    method: 'PATCH',\n    url: ApiUrl.User,\n    data: params,\n  });\n};\n\n/**\n * Service для получения пользователей.\n */\nexport const getUsersService = () => {\n  return axiosInstance.request<User[]>({\n    method: 'GET',\n    url: ApiUrl.Users,\n  });\n};\n","import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport { SagaIterator } from 'redux-saga';\nimport {\n  failureGetUserAction,\n  failureUpdateUserAction,\n  requestGetUserAction,\n  requestGetUsersAction,\n  requestUpdateUserAction,\n  successGetUserAction,\n  successGetUsersAction,\n  successUpdateUserAction,\n} from '../store';\nimport { getUserService, getUsersService, updateUserService } from 'modules/user/services';\n\n// TODO: Разделить user на profile и users\n\n/**\n * Saga для получения данных пользователя.\n */\nconst getUserSaga = function* (): SagaIterator {\n  try {\n    const response: Awaited<ReturnType<typeof getUserService>> = yield call(getUserService);\n    yield put(successGetUserAction(response.data));\n  } catch (error) {\n    console.error(error);\n    yield put(failureGetUserAction(error));\n  }\n};\n\n/**\n * Saga для обновления данных пользователя.\n */\nconst updateUserSaga = function* ({ payload }: ReturnType<typeof requestUpdateUserAction>): SagaIterator {\n  try {\n    const response: Awaited<ReturnType<typeof updateUserService>> = yield call(updateUserService, payload);\n    yield put(successUpdateUserAction(response.data));\n  } catch (error) {\n    console.error(error);\n    yield put(failureUpdateUserAction(error));\n  }\n};\n\n/**\n * Saga для получения пользователей.\n */\nconst getUsersSaga = function* (): SagaIterator {\n  try {\n    const response: Awaited<ReturnType<typeof getUsersService>> = yield call(getUsersService);\n    yield put(successGetUsersAction(response.data));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n/**\n * Saga для модуля пользователь.\n */\nconst userSaga = function* (): SagaIterator {\n  yield all([\n    takeEvery(requestGetUserAction.type, getUserSaga),\n    takeEvery(requestUpdateUserAction.type, updateUserSaga),\n    takeEvery(requestGetUsersAction.type, getUsersSaga),\n    // debounce(500, postUsersAction.type, postUsersSaga), // TODO: Подумать про debounce в 500мс для получения пользователей по имени\n  ]);\n};\n\nexport { userSaga };\n","import { API_URL } from 'core/constants';\n\nexport const ApiUrl = {\n  Registration: '/registration',\n  Authorization: '/authorization',\n  Refresh: `${API_URL}/api/refresh`,\n  Logout: '/logout',\n};\n","import axios from 'axios';\nimport { axiosInstance } from 'core/utils/axios-instance';\nimport { requestAuthorizationAction, requestRegistrationAction } from '../store';\nimport { ApiUrl } from './constants';\nimport { Authorization } from './types';\n\n/**\n * Service для регистрации пользователя.\n */\nexport const registrationService = (params: ReturnType<typeof requestRegistrationAction>['payload']) => {\n  return axiosInstance.request<Authorization>({\n    method: 'POST',\n    url: ApiUrl.Registration,\n    data: params,\n  });\n};\n\n/**\n * Service для авторизации пользователя.\n */\nexport const authorizationService = (params: ReturnType<typeof requestAuthorizationAction>['payload']) => {\n  return axiosInstance.request<Authorization>({\n    method: 'POST',\n    url: ApiUrl.Authorization,\n    data: params,\n  });\n};\n\n/**\n * Service для обновления токенов.\n */\nexport const refreshService = () => {\n  return axios.request<Authorization>({\n    method: 'GET',\n    url: ApiUrl.Refresh,\n    withCredentials: true,\n  });\n};\n\n/**\n * Service для выхода из аккаунта.\n */\nexport const logoutService = () => {\n  return axiosInstance.request<never>({\n    method: 'GET',\n    url: ApiUrl.Logout,\n  });\n};\n","import { SagaIterator } from 'redux-saga';\nimport { all, call, put, takeEvery } from 'redux-saga/effects';\nimport {\n  authorizationService,\n  logoutService,\n  refreshService,\n  registrationService,\n} from 'modules/authorization/services';\nimport {\n  failureAuthorizationAction,\n  failureLogoutAction,\n  failureRefreshAction,\n  failureRegistrationAction,\n  requestAuthorizationAction,\n  requestLogoutAction,\n  requestRefreshAction,\n  requestRegistrationAction,\n  successAuthorizationAction,\n  successLogoutAction,\n  successRefreshAction,\n  successRegistrationAction,\n} from '../store';\nimport { successGetUserAction } from 'modules/user/store';\n\n/**\n * Saga для регистрации пользователя.\n */\nconst registrationSaga = function* ({ payload }: ReturnType<typeof requestRegistrationAction>): SagaIterator {\n  try {\n    const response: Awaited<ReturnType<typeof registrationService>> = yield call(registrationService, payload);\n    yield put(successRegistrationAction({ access_token: response.data.access_token }));\n  } catch (error) {\n    console.error(error);\n    yield put(failureRegistrationAction({ error }));\n  }\n};\n\n/**\n * Saga для авторизации пользователя.\n */\nconst authorizationSaga = function* ({ payload }: ReturnType<typeof requestAuthorizationAction>): SagaIterator {\n  try {\n    const response: Awaited<ReturnType<typeof authorizationService>> = yield call(authorizationService, payload);\n    yield put(successAuthorizationAction({ access_token: response.data.access_token }));\n  } catch (error) {\n    console.error(error);\n    yield put(failureAuthorizationAction({ error }));\n  }\n};\n\n/**\n * Saga для обновления токенов.\n */\nconst refreshSaga = function* (): SagaIterator {\n  try {\n    const response: Awaited<ReturnType<typeof refreshService>> = yield call(refreshService);\n    yield put(successRefreshAction({ access_token: response.data.access_token }));\n  } catch (error) {\n    console.error(error);\n    yield put(failureRefreshAction({ error }));\n  }\n};\n\n/**\n * Saga для выхода из аккаунта.\n */\nconst logoutSaga = function* (): SagaIterator {\n  try {\n    yield call(logoutService);\n    yield put(successLogoutAction());\n  } catch (error) {\n    console.error(error);\n    yield put(failureLogoutAction({ error }));\n  }\n};\n\n/**\n * Saga для модуля авторизация.\n */\nconst authorizationModuleSaga = function* (): SagaIterator {\n  yield all([\n    takeEvery(requestAuthorizationAction.type, authorizationSaga),\n    takeEvery(requestRefreshAction.type, refreshSaga),\n    takeEvery(requestRegistrationAction.type, registrationSaga),\n    takeEvery(requestLogoutAction.type, logoutSaga),\n  ]);\n};\n\nexport { authorizationModuleSaga };\n","import { all, fork } from 'redux-saga/effects';\nimport { SagaIterator } from 'redux-saga';\nimport { userSaga } from 'modules/user/sagas';\nimport { authorizationModuleSaga } from 'modules/authorization/sagas';\n\nconst sagas = [authorizationModuleSaga, userSaga];\n\n/**\n * Saga для всех модулей.\n */\nconst rootSaga = function* (): SagaIterator {\n  yield all(sagas.map((saga) => fork(saga)));\n};\n\nexport { rootSaga };\n","import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { userReducer } from 'modules/user/store';\nimport { rootSaga } from 'core/store/sagas';\nimport { authorizationReducer } from 'modules/authorization/store';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    authorization: authorizationReducer,\n    user: userReducer,\n  },\n  middleware: [sagaMiddleware],\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport { store };\n","import { memo } from 'react';\nimport { TextField as MUITextField, TextFieldProps as MUITextFieldProps } from '@mui/material';\n\nconst TextField = ({ ...props }: MUITextFieldProps) => {\n  return <MUITextField {...props} />;\n};\n\nexport const TextFieldMemoized = memo(TextField);\n","import { createTheme, colors } from '@mui/material';\n\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      light: colors.indigo.A400,\n      main: colors.indigo[500],\n      dark: colors.indigo[800],\n    },\n  },\n});\n","export default __webpack_public_path__ + \"assets/images/authorization-image.6642b50856b9fc50fde3936da1774bf9.jpg\";","import { Box } from '@mui/material';\nimport { memo, ReactElement } from 'react';\n\nconst AuthorizationLayout = ({ children }: { children: ReactElement }) => {\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%',\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport const AuthorizationLayoutMemoized = memo(AuthorizationLayout);\n","import { memo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TextField } from 'core/components/text-field';\nimport { Box, InputAdornment, IconButton, Typography, Link } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { theme } from 'core/theme';\nimport { useNavigate } from 'react-router-dom';\nimport authorizationImage from 'core/assets/images/authorization-image.jpg';\nimport { AuthorizationLayout } from 'core/layouts/authorization-layout';\nimport { css } from '@emotion/css';\nimport { LoadingButton } from '@mui/lab';\nimport { RootState } from 'core/store/types';\nimport { requestAuthorizationAction } from 'modules/authorization/store';\n\nconst Authorization = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { loading } = useSelector((state: RootState) => state.authorization);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isShowPassword, setIsShowPassword] = useState(false);\n\n  return (\n    <AuthorizationLayout>\n      <Box\n        sx={{\n          display: 'grid',\n          width: '920px',\n          gridTemplateColumns: '448px 472px',\n          borderRadius: '20px',\n          border: `1px solid ${theme.palette.grey[300]}`,\n          overflow: 'hidden',\n        }}\n      >\n        <Box>\n          <img\n            className={css`\n              width: 100%;\n              height: 100%;\n              object-fit: cover;\n            `}\n            src={authorizationImage}\n            alt=\"Илюстрация.\"\n          />\n        </Box>\n        <Box sx={{ padding: '48px 56px', backgroundColor: `${theme.palette.common.white}` }}>\n          <Box sx={{ display: 'grid', rowGap: '16px' }}>\n            <Box sx={{ display: 'grid', rowGap: '32px' }}>\n              <Box sx={{ display: 'grid', rowGap: '32px' }}>\n                <Typography variant=\"h5\">Войти в свой профиль</Typography>\n                <Box sx={{ display: 'grid', rowGap: '24px' }}>\n                  <TextField\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Адрес электронной почты\"\n                    value={email}\n                    onChange={(event) => setEmail(event.target.value)}\n                    placeholder=\"Введите ваш email\"\n                    autoComplete=\"off\"\n                    fullWidth\n                  />\n                  <TextField\n                    type={isShowPassword ? 'text' : 'password'}\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Пароль\"\n                    value={password}\n                    onChange={(event) => setPassword(event.target.value)}\n                    placeholder=\"Введите ваш пароль\"\n                    autoComplete=\"off\"\n                    fullWidth\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton onClick={() => setIsShowPassword(!isShowPassword)}>\n                            {isShowPassword ? <VisibilityOff /> : <Visibility />}\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Box>\n              </Box>\n              <LoadingButton\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                loading={loading.access_token}\n                onClick={() => {\n                  dispatch(requestAuthorizationAction({ email, password }));\n                }}\n              >\n                Войти\n              </LoadingButton>\n            </Box>\n            <Typography variant=\"subtitle2\">\n              У Вас ещё нет профиля?{' '}\n              <Link\n                sx={{ cursor: 'pointer' }}\n                underline=\"hover\"\n                onClick={(event) => {\n                  event.preventDefault();\n\n                  navigate('/registration');\n                }}\n              >\n                Зарегистрироваться\n              </Link>\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n    </AuthorizationLayout>\n  );\n};\n\nexport const AuthorizationMemoized = memo(Authorization);\n","import { memo, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, Typography, TextField, InputAdornment, IconButton, Link } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { theme } from 'core/theme';\nimport { useNavigate } from 'react-router-dom';\nimport { requestRegistrationAction } from 'modules/authorization/store';\nimport authorizationImage from 'core/assets/images/authorization-image.jpg';\nimport { AuthorizationLayout } from 'core/layouts/authorization-layout';\nimport { css } from '@emotion/css';\nimport { LoadingButton } from '@mui/lab';\nimport { RootState } from 'core/store/types';\nimport { toast } from 'react-toastify';\n\nconst Registration = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { loading, error } = useSelector((state: RootState) => state.authorization);\n\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [isShowPassword, setIsShowPassword] = useState(false);\n\n  useEffect(() => {\n    console.log({ error });\n    error?.access_token?.errors?.forEach((error: any) => {\n      toast.error(error.msg);\n    });\n  }, [error]);\n\n  return (\n    <AuthorizationLayout>\n      <Box\n        sx={{\n          display: 'grid',\n          width: '920px',\n          gridTemplateColumns: '448px 472px',\n          borderRadius: '20px',\n          border: `1px solid ${theme.palette.grey[300]}`,\n          overflow: 'hidden',\n        }}\n      >\n        <Box>\n          <img\n            className={css`\n              width: 100%;\n              height: 100%;\n              object-fit: cover;\n            `}\n            src={authorizationImage}\n            alt=\"Илюстрация.\"\n          />\n        </Box>\n        <Box sx={{ padding: '48px 56px', backgroundColor: `${theme.palette.common.white}` }}>\n          <Box sx={{ display: 'grid', rowGap: '16px' }}>\n            <Box sx={{ display: 'grid', rowGap: '24px' }}>\n              <Box sx={{ display: 'grid', rowGap: '32px' }}>\n                <Typography variant=\"h5\">Создать учётную запись</Typography>\n                <Box sx={{ display: 'grid', rowGap: '24px' }}>\n                  <TextField\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Адрес электронной почты\"\n                    value={email}\n                    onChange={(event) => setEmail(event.target.value)}\n                    placeholder=\"Введите ваш email\"\n                    autoComplete=\"off\"\n                    fullWidth\n                  />\n                  <TextField\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    label=\"Имя пользователя\"\n                    value={name}\n                    onChange={(event) => setName(event.target.value)}\n                    placeholder=\"Введите ваше имя\"\n                    autoComplete=\"off\"\n                    fullWidth\n                  />\n                  <TextField\n                    type={isShowPassword ? 'text' : 'password'}\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Пароль\"\n                    value={password}\n                    onChange={(event) => setPassword(event.target.value)}\n                    placeholder=\"Введите ваш пароль\"\n                    autoComplete=\"off\"\n                    fullWidth\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton onClick={() => setIsShowPassword(!isShowPassword)}>\n                            {isShowPassword ? <VisibilityOff /> : <Visibility />}\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Box>\n              </Box>\n              <Box sx={{ display: 'grid', rowGap: '32px' }}>\n                <Typography variant=\"caption\" color={theme.palette.grey[500]}>\n                  Регистрируясь, Вы соглашаетесь с{' '}\n                  <Link sx={{ cursor: 'pointer' }} underline=\"hover\">\n                    политикой обработки персональных данных\n                  </Link>\n                </Typography>\n                <LoadingButton\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  loading={loading.access_token}\n                  onClick={() => dispatch(requestRegistrationAction({ email, name, password }))}\n                >\n                  Зарегистрироваться\n                </LoadingButton>\n              </Box>\n            </Box>\n            <Typography variant=\"subtitle2\">\n              <Link\n                sx={{ cursor: 'pointer' }}\n                underline=\"hover\"\n                onClick={(event) => {\n                  event.preventDefault();\n                  navigate('/authorization');\n                }}\n              >\n                Уже зарегистрированы?\n              </Link>\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n    </AuthorizationLayout>\n  );\n};\n\nexport const RegistrationMemoized = memo(Registration);\n","import { memo } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Authorization } from 'modules/authorization/pages/authorization';\nimport { Registration } from 'modules/authorization/pages/registration';\n\nconst PublicRoutes = () => {\n  return (\n    <Routes>\n      <Route path=\"authorization\" element={<Authorization />} />\n      <Route path=\"registration\" element={<Registration />} />\n      <Route path=\"*\" element={<Navigate to=\"authorization\" />} />\n    </Routes>\n  );\n};\n\nexport const PublicRoutesMemoized = memo(PublicRoutes);\n","import { Button as MUIButton, ButtonProps as MUIButtonProps } from '@mui/material';\nimport { memo } from 'react';\n\nconst Button = ({ children, ...props }: MUIButtonProps) => {\n  return (\n    <MUIButton disableElevation {...props}>\n      {children}\n    </MUIButton>\n  );\n};\n\nexport const ButtonMemoized = memo(Button);\n","import { memo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Group, Dashboard, Settings } from '@mui/icons-material';\nimport { Box, Divider, Tooltip } from '@mui/material';\nimport { theme } from '../../theme';\n\nconst Navigation = () => {\n  const navigate = useNavigate();\n\n  //  TODO: Добавить Drawer компонент\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        rowGap: '24px',\n        height: '100%',\n        alignContent: 'start',\n        padding: '25px 16px',\n        justifyContent: 'center',\n      }}\n    >\n      <Box sx={{ display: 'grid', rowGap: '16px' }}>\n        <Tooltip title=\"Друзья\" arrow placement=\"right\">\n          <Box\n            sx={{\n              display: 'grid',\n              padding: '8px',\n              backgroundColor: theme.palette.grey[400],\n              cursor: 'pointer',\n              borderRadius: '8px',\n              justifyContent: 'center',\n              width: '40px',\n            }}\n            onClick={() => navigate('/friends')}\n          >\n            <Group />\n          </Box>\n        </Tooltip>\n        <Tooltip title=\"Каналы\" arrow placement=\"right\">\n          <Box\n            sx={{\n              display: 'grid',\n              padding: '8px',\n              backgroundColor: theme.palette.grey[400],\n              cursor: 'pointer',\n              borderRadius: '8px',\n              justifyContent: 'center',\n              width: '40px',\n            }}\n            onClick={() => navigate('/channels')}\n          >\n            <Dashboard />\n          </Box>\n        </Tooltip>\n      </Box>\n      <Divider />\n      <Tooltip title=\"Настройки\" arrow placement=\"right\">\n        <Box\n          sx={{\n            display: 'grid',\n            padding: '8px',\n            backgroundColor: theme.palette.grey[400],\n            cursor: 'pointer',\n            borderRadius: '8px',\n            justifyContent: 'center',\n            width: '40px',\n          }}\n          onClick={() => navigate('/settings')}\n        >\n          <Settings />\n        </Box>\n      </Tooltip>\n    </Box>\n  );\n};\n\nexport const NavigationMemoized = memo(Navigation);\n","import { io } from 'socket.io-client';\nimport { API_URL } from '../constants';\n\nconst socket = io(API_URL, {\n  transports: ['websocket'],\n});\n\nexport { socket };\n","import { RootState } from '../../../core/store/types';\n\nexport const userUserSelector = (state: RootState) => state.user.user;\nexport const userUsersSelector = (state: RootState) => state.user.users;\nexport const userFriendsSelector = (state: RootState) => state.user.friends;\nexport const userInvitesSelector = (state: RootState) => state.user.invites;\nexport const userApprovalsSelector = (state: RootState) => state.user.approvals;\nexport const userIsCallSelector = (state: RootState) => state.user.isCall;\nexport const userIsIncomingCallSelector = (state: RootState) => state.user.isIncomingCall;\nexport const userIsCallAcceptedSelector = (state: RootState) => state.user.isCallAccepted;\nexport const userIsCallCanceledSelector = (state: RootState) => state.user.isCallCanceled;\nexport const userChannelsSelector = (state: RootState) => state.user.channels;\nexport const userChannelMessagesSelector = (state: RootState) => state.user.channelMessages;\n","import { memo } from 'react';\nimport { Avatar, colors, Badge, Box, Typography, IconButton } from '@mui/material';\nimport { theme } from '../../theme';\nimport { DeleteOutline } from '@mui/icons-material';\nimport { socket } from '../../utils/socket';\nimport { useSelector } from 'react-redux';\nimport { userUserSelector } from '../../../modules/user/store/selectors';\nimport { useNavigate } from 'react-router-dom';\n\nconst User = ({\n  name,\n  status,\n  channelId,\n}: {\n  id: string;\n  name: string;\n  status: string;\n  email: string;\n  channelId?: string;\n}) => {\n  const user = useSelector(userUserSelector);\n  const navigate = useNavigate();\n\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: 'max-content 1fr max-content',\n        columnGap: '8px',\n        alignItems: 'center',\n        padding: '8px 12px',\n        borderRadius: '8px',\n        cursor: 'pointer',\n        ':hover': {\n          backgroundColor: theme.palette.grey[300],\n          '.delete-icon': {\n            display: 'grid',\n          },\n        },\n        '.MuiBadge-badge': {\n          border: `1px solid ${theme.palette.common.white}`,\n        },\n        '.MuiBadge-colorSuccess': {\n          backgroundColor: theme.palette.success.light,\n        },\n        '.MuiBadge-colorError': {\n          backgroundColor: theme.palette.error.light,\n        },\n      }}\n      onClick={() => {\n        socket.emit('on-channel-join', channelId, user?.id);\n        navigate('/messages');\n      }}\n    >\n      <Badge\n        overlap=\"circular\"\n        variant=\"dot\"\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        color={status === 'online' ? 'success' : 'error'}\n      >\n        <Avatar sx={{ backgroundColor: colors.deepPurple[500] }} />\n      </Badge>\n      <Box sx={{ display: 'grid', gridTemplateColumns: 'max-content' }}>\n        <Typography variant=\"body2\">{name ? name : ''}</Typography>\n        <Typography variant=\"caption\">В сети</Typography>\n      </Box>\n      <Box className=\"delete-icon\" sx={{ display: 'none' }}>\n        <IconButton>\n          <DeleteOutline sx={{ color: theme.palette.grey[700] }} />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n\nexport const UserMemoized = memo(User);\n","import { memo, useState } from 'react';\nimport { Avatar, Badge, Box, IconButton, Typography } from '@mui/material';\nimport { theme } from '../../theme';\nimport { Mic, MicOff, Videocam, VideocamOff } from '@mui/icons-material';\nimport { useSelector } from 'react-redux';\nimport { userUserSelector } from '../../../modules/user/store/selectors';\n\nconst UserControl = () => {\n  const user = useSelector(userUserSelector);\n\n  const [isMic, setIsMic] = useState(false);\n  const [isVideocam, setIsVideocam] = useState(false);\n\n  return (\n    <Box sx={{ display: 'grid', alignItems: 'center', backgroundColor: theme.palette.grey[300], padding: '12px 20px' }}>\n      <Box sx={{ display: 'grid', columnGap: '8px', gridTemplateColumns: '40px 1fr 96px' }}>\n        {/* Аватар пользователя */}\n        <Box\n          sx={{\n            '.MuiBadge-badge': {\n              border: `1px solid ${theme.palette.common.white}`,\n            },\n            '.MuiBadge-colorSuccess': {\n              backgroundColor: theme.palette.success.light,\n            },\n            '.MuiBadge-colorError': {\n              backgroundColor: theme.palette.error.light,\n            },\n          }}\n        >\n          <Badge\n            overlap=\"circular\"\n            variant=\"dot\"\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n            color={user?.status === 'online' ? 'success' : 'error'}\n          >\n            <Avatar sx={{ backgroundColor: user?.color ? user.color : user?.default_color }} src={user?.image} />\n          </Badge>\n        </Box>\n        {/* Имя пользователя */}\n        <Box>\n          <Typography variant=\"body2\">{user?.name}</Typography>\n          <Typography sx={{ color: theme.palette.grey[500] }} variant=\"caption\">\n            #{user?.id.slice(-4)}\n          </Typography>\n        </Box>\n        {/* Кнопки управления */}\n        <Box sx={{ display: 'grid', columnGap: '16px', gridTemplateColumns: 'repeat(2, 40px)', alignItems: 'center' }}>\n          <IconButton onClick={() => setIsMic(!isMic)}>\n            {isMic ? (\n              <Mic sx={{ color: theme.palette.grey[700] }} />\n            ) : (\n              <MicOff sx={{ color: theme.palette.grey[700] }} />\n            )}\n          </IconButton>\n          <IconButton onClick={() => setIsVideocam(!isVideocam)}>\n            {isVideocam ? (\n              <Videocam sx={{ color: theme.palette.grey[700] }} />\n            ) : (\n              <VideocamOff sx={{ color: theme.palette.grey[700] }} />\n            )}\n          </IconButton>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport const UserControlMemoized = memo(UserControl);\n","import { Box, Typography } from '@mui/material';\nimport { Button } from 'core/components/button';\nimport { Navigation } from 'core/components/navigation';\nimport { User } from 'core/components/user';\nimport { UserControl } from 'core/components/user-control';\nimport { theme } from 'core/theme';\n// import { axiosInstance } from 'core/utils/axios-instance';\nimport { memo, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\n\nconst Friends = () => {\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const [usersMessages, setUsersMessages] = useState<any[]>();\n\n  useEffect(() => {\n    // const getPersonalMessage = async () => {\n    //   const response = await axiosInstance.post('/get-personal-messages-channels');\n    //   setUsersMessages(response.data);\n    // };\n    // getPersonalMessage();\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: '72px 376px 1fr',\n        height: '100%',\n        backgroundColor: theme.palette.common.white,\n      }}\n    >\n      {/* Навигация */}\n      <Box sx={{ backgroundColor: theme.palette.grey[200] }}>\n        <Navigation />\n      </Box>\n      {/* Личные сообщения*/}\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateRows: '72px max-content 1fr 64px',\n          backgroundColor: theme.palette.grey[400],\n          overflow: 'hidden',\n        }}\n      >\n        {/* Заголовок  */}\n        <Box sx={{ padding: '24px 20px', borderBottom: `1px solid ${theme.palette.grey[600]}` }}>\n          <Typography variant=\"h6\">Личные сообщения</Typography>\n        </Box>\n        {/* Друзья */}\n        <Box sx={{ padding: '16px' }}>\n          <Button fullWidth variant=\"contained\" onClick={() => navigate('/friends')}>\n            Друзья\n          </Button>\n        </Box>\n        {/* Список сообщений от пользователей */}\n        <Box\n          sx={{\n            margin: '28px 4px',\n            overflowY: 'scroll',\n            '&::-webkit-scrollbar': {\n              width: '4px',\n            },\n            '&::-webkit-scrollbar-track': {\n              backgroundColor: 'none',\n            },\n            '&::-webkit-scrollbar-thumb': {\n              backgroundColor: theme.palette.grey[300],\n              border: `1px solid ${theme.palette.grey[500]}`,\n              borderRadius: '8px',\n            },\n          }}\n        >\n          <Box sx={{ display: 'grid', rowGap: '12px', padding: '0 4px' }}>\n            {usersMessages?.map((value: any) => {\n              return (\n                <User\n                  key={value.userData._id}\n                  id={value.userData._id}\n                  name={value.userData.name}\n                  status={value.userData.status}\n                  email={value.userData.email}\n                  channelId={value.value._id}\n                />\n              );\n            })}\n          </Box>\n        </Box>\n        {/* Управление пользователем */}\n        <UserControl />\n      </Box>\n      {/* Блок друзья */}\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateRows: '72px 1fr',\n          backgroundColor: theme.palette.grey[500],\n          overflow: 'hidden',\n        }}\n      >\n        {/* Навигация по разделу друзья */}\n        <Box\n          sx={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(2, max-content)',\n            columnGap: '24px',\n            padding: '16px 24px',\n            borderBottom: `1px solid ${theme.palette.grey[400]}`,\n            alignItems: 'center',\n          }}\n        >\n          <Typography variant=\"h6\">Друзья</Typography>\n          <Box\n            sx={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(5, max-content)',\n              columnGap: '8px',\n            }}\n          >\n            <Button\n              variant={pathname.includes('all-users') ? 'contained' : 'outlined'}\n              color=\"primary\"\n              onClick={() => navigate('all-users')}\n            >\n              Все пользователи\n            </Button>\n            <Button\n              variant={pathname.includes('friends-online') ? 'contained' : 'outlined'}\n              color=\"primary\"\n              onClick={() => navigate('friends-online')}\n            >\n              В сети\n            </Button>\n            <Button\n              variant={pathname.includes('friends-invites') ? 'contained' : 'outlined'}\n              color=\"primary\"\n              onClick={() => navigate('friends-invites')}\n            >\n              Заявки\n            </Button>\n            <Button\n              variant={pathname.includes('friends-approvals') ? 'contained' : 'outlined'}\n              color=\"primary\"\n              onClick={() => navigate('friends-approvals')}\n            >\n              Ожидание\n            </Button>\n            <Button\n              variant={pathname.includes('add-to-friends') ? 'contained' : 'outlined'}\n              color=\"success\"\n              onClick={() => navigate('add-to-friends')}\n            >\n              Добавить в друзья\n            </Button>\n          </Box>\n        </Box>\n        {/* Содержимое вкладки */}\n        <Outlet />\n      </Box>\n    </Box>\n  );\n};\n\nexport const FriendsMemoized = memo(Friends);\n","import { memo, useEffect, useState } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { theme } from 'core/theme';\nimport { Navigation } from 'core/components/navigation';\nimport { UserControl } from 'core/components/user-control';\nimport { User } from 'core/components/user';\nimport { Button } from 'core/components/button';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { axiosInstance } from 'core/utils/axios-instance';\nimport { TextField } from 'core/components/text-field';\nimport { socket } from 'core/utils/socket';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userChannelMessagesSelector, userUserSelector } from 'modules/user/store/selectors';\nimport { getChannelMessages } from 'core/services/get-channel-messages';\n\nconst Messages = () => {\n  const navigate = useNavigate();\n\n  const user = useSelector(userUserSelector);\n  const dispatch = useDispatch();\n\n  const channelMessages = useSelector(userChannelMessagesSelector);\n\n  const [usersMessages, setUsersMessages] = useState<any[]>();\n  const [message, setMessage] = useState('');\n  const [channel, setChannel] = useState<string>('');\n\n  // Добавляет сообщение в канал\n  const handleSendMessage = () => {\n    if (channel && message) {\n      // dispatch(addMessageToChannel({ channel, message }));\n\n      // ON-MESSAGE - событие отправки сообщения в канал\n      socket.emit('on-message', channel, message, user?.id);\n\n      setMessage('');\n    }\n  };\n\n  useEffect(() => {\n    const getPersonalMessage = async () => {\n      const response = await axiosInstance.post('/get-personal-messages-channels');\n\n      setUsersMessages(response.data);\n    };\n\n    // getPersonalMessage();\n\n    // ON-CHANNEL-JOIN - событие подключения пользователей к комнате\n    socket.on('on-channel-join', (message: string, channel: string) => {\n      console.log('Сообщение в канале:', message);\n      setChannel(channel);\n\n      if (channel) {\n        dispatch(getChannelMessages({ channel }));\n      }\n    });\n\n    if (channel) {\n      dispatch(getChannelMessages({ channel }));\n    }\n\n    socket.on('on-message', (channel: string) => {\n      if (channel) {\n        dispatch(getChannelMessages({ channel }));\n      }\n    });\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: '72px 376px 1fr',\n        height: '100%',\n        backgroundColor: theme.palette.common.white,\n      }}\n    >\n      {/* Навигация */}\n      <Box sx={{ backgroundColor: theme.palette.grey[200] }}>\n        <Navigation />\n      </Box>\n\n      {/* Личные сообщения*/}\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateRows: '72px max-content 1fr 64px',\n          backgroundColor: theme.palette.grey[400],\n          overflow: 'hidden',\n        }}\n      >\n        {/* Заголовок  */}\n        <Box sx={{ padding: '24px 20px', borderBottom: `1px solid ${theme.palette.grey[600]}` }}>\n          <Typography variant=\"h6\">Личные сообщения</Typography>\n        </Box>\n        {/* Друзья */}\n        <Box sx={{ padding: '16px' }}>\n          <Button fullWidth variant=\"contained\" onClick={() => navigate('/friends/all-friends')}>\n            Друзья\n          </Button>\n        </Box>\n        {/* Список сообщений от пользователей */}\n        <Box\n          sx={{\n            margin: '28px 4px',\n            overflowY: 'scroll',\n            '&::-webkit-scrollbar': {\n              width: '4px',\n            },\n            '&::-webkit-scrollbar-track': {\n              backgroundColor: 'none',\n            },\n            '&::-webkit-scrollbar-thumb': {\n              backgroundColor: theme.palette.grey[300],\n              border: `1px solid ${theme.palette.grey[500]}`,\n              borderRadius: '8px',\n            },\n          }}\n        >\n          <Box sx={{ display: 'grid', rowGap: '12px', padding: '0 4px' }}>\n            {usersMessages?.map((value: any) => {\n              return (\n                <User\n                  key={value.userData._id}\n                  id={value.userData._id}\n                  name={value.userData.name}\n                  status={value.userData.status}\n                  email={value.userData.email}\n                  channelId={value.value._id}\n                />\n              );\n            })}\n          </Box>\n        </Box>\n        {/* Управление пользователем */}\n        <UserControl />\n      </Box>\n      {/* Блок друзья */}\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateRows: '1fr',\n          backgroundColor: theme.palette.grey[500],\n          overflow: 'hidden',\n        }}\n      >\n        {/* Сообщения */}\n        <Box\n          sx={{\n            display: 'grid',\n            gridTemplateRows: '1fr max-content',\n            rowGap: '16px',\n            margin: '24px 16px',\n            backgroundColor: theme.palette.common.white,\n            borderRadius: '8px',\n            padding: '16px',\n            overflow: 'hidden',\n          }}\n        >\n          <Box\n            sx={{\n              display: 'grid',\n              padding: '8px',\n              overflow: 'hidden',\n              gridTemplateRows: 'max-content 1fr',\n              rowGap: '16px',\n            }}\n          >\n            <Typography>Сообщения:</Typography>\n            <Box sx={{ display: 'grid', overflow: 'scroll', rowGap: '8px', alignContent: 'start', height: '100%' }}>\n              {channelMessages?.map((message) => {\n                return (\n                  <Box\n                    key={message._id}\n                    sx={{\n                      padding: '8px',\n                      border: '1px solid #000000',\n                      display: 'grid',\n                      borderRadius: '8px',\n                    }}\n                  >\n                    <User\n                      id={message._id}\n                      name={message.author.name}\n                      status={message.author.status}\n                      email={message.author.email}\n                    />\n                    <Typography>{message.text}</Typography>\n                  </Box>\n                );\n              })}\n            </Box>\n          </Box>\n          <Box sx={{ display: 'grid', gridTemplateColumns: '1fr max-content', columnGap: '16px' }}>\n            <TextField\n              type=\"text\"\n              id=\"message\"\n              name=\"message\"\n              label=\"Сообщение\"\n              value={message}\n              onChange={(event) => setMessage(event.target.value)}\n              placeholder=\"Введите текст сообщения\"\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSendMessage}>\n              Отправить сообщение\n            </Button>\n          </Box>\n        </Box>\n        {/* Содержимое вкладки */}\n        <Outlet />\n      </Box>\n    </Box>\n  );\n};\n\nexport const MessagesMemoized = memo(Messages);\n","import { css } from '@emotion/css';\nimport { Box, Divider, Link, Typography } from '@mui/material';\nimport { RootState } from 'core/store/types';\nimport { socket } from 'core/utils/socket';\nimport { requestLogoutAction } from 'modules/authorization/store';\nimport { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst UserSettings = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const { user } = useSelector((state: RootState) => state.user);\n\n  const userSettingsConfig = [\n    {\n      id: 1,\n      title: 'Моя учётная запись',\n      path: 'user-account',\n      onClick: () => {\n        navigate('user-account');\n      },\n      divider: false,\n    },\n    {\n      id: 2,\n      title: 'Профиль пользователя',\n      path: 'user-profile',\n      onClick: () => {\n        navigate('user-profile');\n      },\n      divider: false,\n    },\n    {\n      id: 3,\n      title: 'Голос и видео',\n      path: 'voice-and-video',\n      onClick: () => {\n        navigate('voice-and-video');\n      },\n      divider: false,\n    },\n    {\n      id: 4,\n      title: 'Выйти',\n      path: 'logout',\n      onClick: () => {\n        dispatch(requestLogoutAction());\n\n        if (user?.id) {\n          socket.emit('on-disconnect', user.id);\n        }\n\n        socket.close();\n      },\n      divider: true,\n    },\n  ];\n\n  return (\n    <Box sx={{ padding: '60px 8px', backgroundColor: '#43454a' }}>\n      <Typography\n        className={css`\n          padding: 6px 10px !important;\n          font-weight: 700 !important;\n          font-size: 12px !important;\n          line-height: 16px !important;\n          color: #a0a2a6;\n          text-transform: uppercase;\n        `}\n      >\n        Настройки пользователя\n      </Typography>\n      <Box\n        component=\"ul\"\n        className={css`\n          display: grid;\n          margin: 0;\n          padding: 0;\n          list-style: none;\n          row-gap: 2px;\n        `}\n      >\n        {userSettingsConfig.map((value) => {\n          return (\n            <>\n              {value.divider && <Divider sx={{ borderColor: 'rgba(255, 255, 255, 0.25)', margin: '8px 10px' }} />}\n              <Box\n                key={value.id}\n                component=\"li\"\n                className={css`\n                  padding: 6px 10px !important;\n                  font-weight: 500 !important;\n                  font-size: 16px !important;\n                  line-height: 20px !important;\n                  background-color: ${location.pathname.includes(value.path) ? `#60656c` : 'none'};\n                  border-radius: 4px;\n                  cursor: pointer;\n\n                  &:hover,\n                  &:focus {\n                    background-color: ${location.pathname.includes(value.path) ? '#565a61' : '#87888d'};\n\n                    p {\n                      color: #dfe0e1;\n                    }\n                  }\n                `}\n                onClick={value.onClick}\n              >\n                <Link underline=\"none\">\n                  <Typography sx={{ color: location.pathname.includes(value.path) ? '#ffffff' : '#a0a2a6' }}>\n                    {value.title}\n                  </Typography>\n                </Link>\n              </Box>\n            </>\n          );\n        })}\n      </Box>\n      <Typography\n        className={css`\n          padding: 6px 10px !important;\n          font-weight: 700 !important;\n          font-size: 12px !important;\n          line-height: 16px !important;\n          color: #a0a2a6;\n          text-transform: uppercase;\n        `}\n      >\n        Настройки приложения\n      </Typography>\n    </Box>\n  );\n};\n\nexport const UserSettingsMemoized = memo(UserSettings);\n","import { memo, useEffect } from 'react';\nimport { Box } from '@mui/material';\nimport { theme } from 'core/theme';\nimport { UserSettings } from 'modules/user/pages/settings/components/user-settings';\nimport { Outlet, useNavigate } from 'react-router-dom';\n\nconst Settings = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // NOTE: Переадресация на страницу учетной записи\n    navigate('user-account');\n  }, []);\n\n  return (\n    <Box sx={{ display: 'grid', width: '100%', height: '100%', backgroundColor: theme.palette.grey[500] }}>\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: '224px 740px',\n          height: '100%',\n          justifyContent: 'center',\n          backgroundImage: 'linear-gradient(to right, #43454a 50%, #5e6065 50%)',\n        }}\n      >\n        <UserSettings />\n        <Outlet />\n      </Box>\n    </Box>\n  );\n};\n\nexport const SettingsMemoized = memo(Settings);\n","import { memo } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { theme } from '../../theme';\nimport { Navigation } from '../../components/navigation';\nimport { UserControl } from '../../components/user-control';\n\nconst ChannelsLayout = () => {\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: '72px 376px 1fr',\n        height: '100%',\n        backgroundColor: theme.palette.common.white,\n      }}\n    >\n      {/* Навигация */}\n      <Box sx={{ backgroundColor: theme.palette.grey[200] }}>\n        <Navigation />\n      </Box>\n      {/* Личные сообщения*/}\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateRows: '72px 1fr 64px',\n          backgroundColor: theme.palette.grey[400],\n          overflow: 'hidden',\n        }}\n      >\n        {/* Заголовок  */}\n        <Box sx={{ padding: '24px 20px', borderBottom: `1px solid ${theme.palette.grey[600]}` }}>\n          <Typography variant=\"h6\">Каналы</Typography>\n        </Box>\n        {/* Список сообщений от пользователей */}\n        <Box sx={{ padding: '0 8px', margin: '28px 0', overflow: 'scroll' }}>\n          <Box sx={{ display: 'grid', rowGap: '12px' }}>\n            {Array.from(Array(25).keys()).map((value) => {\n              return <Box key={value} />;\n            })}\n          </Box>\n        </Box>\n        {/* Управление пользователем */}\n        <UserControl />\n      </Box>\n      {/* Блок текстовых сообщений или видеочата */}\n      <Box sx={{ backgroundColor: theme.palette.grey[600] }}></Box>\n    </Box>\n  );\n};\n\nexport const ChannelsLayoutMemoized = memo(ChannelsLayout);\n","import { memo } from 'react';\nimport { ChannelsLayout } from '../../../../core/layouts/channels-layout';\n\nconst Channels = () => {\n  return <ChannelsLayout />;\n};\n\nexport const ChannelsMemoized = memo(Channels);\n","import { Avatar, Badge, Box, colors, Menu, MenuItem, Typography } from '@mui/material';\nimport { memo, useState } from 'react';\nimport { Chat, Call, MoreVert } from '@mui/icons-material';\nimport { theme } from '../../theme';\nimport { socket } from '../../utils/socket';\nimport { axiosInstance } from '../../utils/axios-instance';\n\nconst UserFriends = ({ id, name, status, image }: { id: string; name: string; status: string; image: string }) => {\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null);\n\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: 'max-content 1fr',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: 'max-content 1fr',\n          columnGap: '8px',\n          alignItems: 'center',\n          padding: '8px 12px',\n          borderRadius: '8px',\n          cursor: 'pointer',\n          '.MuiBadge-badge': {\n            border: `1px solid ${theme.palette.common.white}`,\n          },\n          '.MuiBadge-colorSuccess': {\n            backgroundColor: theme.palette.success.light,\n          },\n          '.MuiBadge-colorError': {\n            backgroundColor: theme.palette.error.light,\n          },\n        }}\n      >\n        <Badge\n          overlap=\"circular\"\n          variant=\"dot\"\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n          color={status === 'online' ? 'success' : 'error'}\n        >\n          <Avatar sx={{ backgroundColor: colors.deepPurple[500] }} src={image} />\n        </Badge>\n        <Box sx={{ display: 'grid', gridTemplateColumns: 'max-content' }}>\n          <Typography variant=\"body2\">{name ? name : ''}</Typography>\n          <Typography variant=\"caption\">{status === 'online' ? 'В сети' : 'Не в сети'}</Typography>\n        </Box>\n      </Box>\n      {/* Кнопки взаимодействия с пользователем */}\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(3, 24px)',\n          columnGap: '24px',\n          alignItems: 'center',\n          justifyContent: 'end',\n        }}\n      >\n        <Box sx={{ cursor: 'pointer' }}>\n          <Chat />\n        </Box>\n        <Box sx={{ cursor: 'pointer' }}>\n          <Call />\n        </Box>\n        <Box sx={{ cursor: 'pointer' }} onClick={(event) => setAnchorEl(event.currentTarget)}>\n          <MoreVert />\n        </Box>\n      </Box>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={() => setAnchorEl(null)}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n        <MenuItem onClick={() => setAnchorEl(null)}>Написать</MenuItem>\n        <MenuItem onClick={() => setAnchorEl(null)}>Позвонить</MenuItem>\n        <MenuItem\n          onClick={async () => {\n            setAnchorEl(null);\n\n            const response = await axiosInstance.post('/remove-from-friends', { friendId: id });\n\n            socket.emit('on-remove-from-friends', id); // Отправка события пользователю, которого удаляют из друзей\n\n            return response.data;\n          }}\n        >\n          Удалить из друзей\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n};\n\nexport const UserFriendsMemoized = memo(UserFriends);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Box, Typography } from '@mui/material';\nimport { theme } from '../../theme';\nimport { memo, useEffect } from 'react';\nimport { UserFriends } from '../user-friends';\nimport { RootState } from 'core/store/types';\nimport { requestGetUsersAction } from 'modules/user/store';\nimport { socket } from 'core/utils/socket';\n\nconst AllFriends = () => {\n  const dispatch = useDispatch();\n\n  const { users } = useSelector((state: RootState) => state.user);\n\n  useEffect(() => {\n    dispatch(requestGetUsersAction());\n\n    socket.on('on-connect', () => {\n      dispatch(requestGetUsersAction());\n    });\n\n    socket.on('on-disconnect', () => {\n      dispatch(requestGetUsersAction());\n    });\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        padding: '0 8px 0 16px',\n        margin: '16px 8px 16px 0',\n        display: 'grid',\n        alignContent: 'start',\n        rowGap: '8px',\n        overflowY: 'scroll',\n        '&::-webkit-scrollbar': {\n          width: '4px',\n        },\n        '&::-webkit-scrollbar-track': {\n          backgroundColor: 'none',\n        },\n        '&::-webkit-scrollbar-thumb': {\n          backgroundColor: theme.palette.grey[300],\n          border: `1px solid ${theme.palette.grey[500]}`,\n          borderRadius: '8px',\n        },\n      }}\n    >\n      <Box sx={{ padding: '8px 12px' }}>\n        <Typography variant=\"h6\">Все пользователи: {users && users?.length > 0 ? users?.length : 0}</Typography>\n      </Box>\n      <Box sx={{ display: 'grid', alignContent: 'start', rowGap: '8px' }}>\n        {users?.map((user) => {\n          return <UserFriends key={user.id} id={user.id} name={user.name} status={user.status} image={user.image} />;\n        })}\n      </Box>\n    </Box>\n  );\n};\n\nexport const AllFriendsMemoized = memo(AllFriends);\n","import { useSelector } from 'react-redux';\nimport { Box } from '@mui/material';\nimport { theme } from '../../theme';\nimport { memo } from 'react';\nimport { userFriendsSelector } from '../../../modules/user/store/selectors';\nimport { UserFriends } from '../user-friends';\n\nconst FriendsOnline = () => {\n  const friends = useSelector(userFriendsSelector);\n\n  return (\n    <Box\n      sx={{\n        padding: '0 8px 0 16px',\n        margin: '16px 8px 16px 0',\n        display: 'grid',\n        alignContent: 'start',\n        rowGap: '8px',\n        overflowY: 'scroll',\n        '&::-webkit-scrollbar': {\n          width: '4px',\n        },\n        '&::-webkit-scrollbar-track': {\n          backgroundColor: 'none',\n        },\n        '&::-webkit-scrollbar-thumb': {\n          backgroundColor: theme.palette.grey[300],\n          border: `1px solid ${theme.palette.grey[500]}`,\n          borderRadius: '8px',\n        },\n      }}\n    >\n      {friends.map((friend) => {\n        return friend.status === 'online' ? (\n          <UserFriends key={friend.id} id={friend.id} name={friend.name} status={friend.status} image={friend.image} />\n        ) : null;\n      })}\n    </Box>\n  );\n};\n\nexport const FriendsOnlineMemoized = memo(FriendsOnline);\n","import { Avatar, Badge, Box, colors, Typography } from '@mui/material';\nimport { memo } from 'react';\nimport { theme } from '../../theme';\nimport { axiosInstance } from '../../utils/axios-instance';\nimport { socket } from '../../utils/socket';\nimport { Button } from '../button';\n\nconst UserAddToFriends = ({ id, name, status }: { id: string; name: string; status: string }) => {\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: 'max-content 1fr',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: 'max-content 1fr',\n          columnGap: '8px',\n          alignItems: 'center',\n          padding: '8px 12px',\n          borderRadius: '8px',\n          cursor: 'pointer',\n          '.MuiBadge-badge': {\n            border: `1px solid ${theme.palette.common.white}`,\n          },\n          '.MuiBadge-colorSuccess': {\n            backgroundColor: theme.palette.success.light,\n          },\n          '.MuiBadge-colorError': {\n            backgroundColor: theme.palette.error.light,\n          },\n        }}\n      >\n        <Badge\n          overlap=\"circular\"\n          variant=\"dot\"\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n          color={status === 'online' ? 'success' : 'error'}\n        >\n          <Avatar sx={{ backgroundColor: colors.deepPurple[500] }} />\n        </Badge>\n        <Box sx={{ display: 'grid', gridTemplateColumns: 'max-content' }}>\n          <Typography variant=\"body2\">{name ? name : ''}</Typography>\n          <Typography variant=\"caption\">{status === 'online' ? 'В сети' : 'Не в сети'}</Typography>\n        </Box>\n      </Box>\n      {/* Кнопки взаимодействия с пользователем */}\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(2, max-content)',\n          columnGap: '24px',\n          alignItems: 'center',\n          justifyContent: 'end',\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={async () => {\n            const response = await axiosInstance.post('/add-to-friends', { friendId: id });\n\n            socket.emit('on-add-to-friends', id); // Отправка события пользователю который ждет принятие приглашения\n\n            return response.data;\n          }}\n        >\n          Добавить\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={async () => {\n            const response = await axiosInstance.post('/remove-invite-to-friends', { friendId: id });\n\n            socket.emit('on-remove-invite-to-friends', id); // Отправка события пользователю который ждет принятия или отклонения приглашения\n\n            return response.data;\n          }}\n        >\n          Отклонить\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport const UserAddToFriendsMemoized = memo(UserAddToFriends);\n","import { useSelector } from 'react-redux';\nimport { Box } from '@mui/material';\nimport { theme } from '../../theme';\nimport { memo } from 'react';\nimport { userInvitesSelector } from '../../../modules/user/store/selectors';\nimport { UserAddToFriends } from '../user-add-to-friends';\n\nconst FriendsInvites = () => {\n  const invites = useSelector(userInvitesSelector);\n\n  return (\n    <Box\n      sx={{\n        padding: '0 8px 0 16px',\n        margin: '16px 8px 16px 0',\n        display: 'grid',\n        alignContent: 'start',\n        rowGap: '8px',\n        overflowY: 'scroll',\n        '&::-webkit-scrollbar': {\n          width: '4px',\n        },\n        '&::-webkit-scrollbar-track': {\n          backgroundColor: 'none',\n        },\n        '&::-webkit-scrollbar-thumb': {\n          backgroundColor: theme.palette.grey[300],\n          border: `1px solid ${theme.palette.grey[500]}`,\n          borderRadius: '8px',\n        },\n      }}\n    >\n      {invites.map((invite) => {\n        return <UserAddToFriends key={invite.id} id={invite.id} name={invite.name} status={invite.status} />;\n      })}\n    </Box>\n  );\n};\n\nexport const FriendsInvitesMemoized = memo(FriendsInvites);\n","import { Avatar, Badge, Box, colors, Typography } from '@mui/material';\nimport { memo } from 'react';\nimport { theme } from '../../theme';\nimport { axiosInstance } from '../../utils/axios-instance';\nimport { socket } from '../../utils/socket';\nimport { Button } from '../button';\n\nconst UserApprovals = ({ id, name, status }: { id: string; name: string; status: string }) => {\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: 'max-content 1fr',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: 'max-content 1fr',\n          columnGap: '8px',\n          alignItems: 'center',\n          padding: '8px 12px',\n          borderRadius: '8px',\n          cursor: 'pointer',\n          '.MuiBadge-badge': {\n            border: `1px solid ${theme.palette.common.white}`,\n          },\n          '.MuiBadge-colorSuccess': {\n            backgroundColor: theme.palette.success.light,\n          },\n          '.MuiBadge-colorError': {\n            backgroundColor: theme.palette.error.light,\n          },\n        }}\n      >\n        <Badge\n          overlap=\"circular\"\n          variant=\"dot\"\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n          color={status === 'online' ? 'success' : 'error'}\n        >\n          <Avatar sx={{ backgroundColor: colors.deepPurple[500] }} />\n        </Badge>\n        <Box sx={{ display: 'grid', gridTemplateColumns: 'max-content' }}>\n          <Typography variant=\"body2\">{name ? name : ''}</Typography>\n          <Typography variant=\"caption\">{status === 'online' ? 'В сети' : 'Не в сети'}</Typography>\n        </Box>\n      </Box>\n      {/* Кнопки взаимодействия с пользователем */}\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(2, max-content)',\n          columnGap: '24px',\n          alignItems: 'center',\n          justifyContent: 'end',\n        }}\n      >\n        <Typography variant=\"body1\">Ожидает добавления в друзья</Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={async () => {\n            const response = await axiosInstance.post('/remove-invite-to-friends', { friendId: id });\n\n            socket.emit('on-remove-invite-to-friends', id); // Отправка события пользователю который ждет принятия или отклонения приглашения\n\n            return response.data;\n          }}\n        >\n          Отклонить\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport const UserApprovalsMemoized = memo(UserApprovals);\n","import { useSelector } from 'react-redux';\nimport { Box } from '@mui/material';\nimport { theme } from '../../theme';\nimport { memo } from 'react';\nimport { userApprovalsSelector } from '../../../modules/user/store/selectors';\nimport { UserApprovals } from '../user-approvals';\n\nconst FriendsApprovals = () => {\n  const approvals = useSelector(userApprovalsSelector);\n\n  return (\n    <Box\n      sx={{\n        padding: '0 8px 0 16px',\n        margin: '16px 8px 16px 0',\n        display: 'grid',\n        alignContent: 'start',\n        rowGap: '8px',\n        overflowY: 'scroll',\n        '&::-webkit-scrollbar': {\n          width: '4px',\n        },\n        '&::-webkit-scrollbar-track': {\n          backgroundColor: 'none',\n        },\n        '&::-webkit-scrollbar-thumb': {\n          backgroundColor: theme.palette.grey[300],\n          border: `1px solid ${theme.palette.grey[500]}`,\n          borderRadius: '8px',\n        },\n      }}\n    >\n      {approvals.map((approval) => {\n        return <UserApprovals key={approval.id} id={approval.id} name={approval.name} status={approval.status} />;\n      })}\n    </Box>\n  );\n};\n\nexport const FriendsApprovalsMemoized = memo(FriendsApprovals);\n","import { Avatar, Badge, Box, colors, Typography } from '@mui/material';\nimport { Dispatch, memo, SetStateAction } from 'react';\nimport { theme } from '../../theme';\nimport { axiosInstance } from '../../utils/axios-instance';\nimport { socket } from '../../utils/socket';\nimport { Button } from '../button';\n\nconst UserAddInviteToFriends = ({\n  id,\n  name,\n  status,\n  setSearchValue,\n}: {\n  id: string;\n  name: string;\n  status: string;\n  setSearchValue: Dispatch<SetStateAction<string>>;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: 'max-content 1fr',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: 'max-content 1fr',\n          columnGap: '8px',\n          alignItems: 'center',\n          padding: '8px 12px',\n          borderRadius: '8px',\n          cursor: 'pointer',\n          '.MuiBadge-badge': {\n            border: `1px solid ${theme.palette.common.white}`,\n          },\n          '.MuiBadge-colorSuccess': {\n            backgroundColor: theme.palette.success.light,\n          },\n          '.MuiBadge-colorError': {\n            backgroundColor: theme.palette.error.light,\n          },\n        }}\n      >\n        <Badge\n          overlap=\"circular\"\n          variant=\"dot\"\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n          color={status === 'online' ? 'success' : 'error'}\n        >\n          <Avatar sx={{ backgroundColor: colors.deepPurple[500] }} />\n        </Badge>\n        <Box sx={{ display: 'grid', gridTemplateColumns: 'max-content' }}>\n          <Typography variant=\"body2\">{name ? name : ''}</Typography>\n          <Typography variant=\"caption\">{status === 'online' ? 'В сети' : 'Не в сети'}</Typography>\n        </Box>\n      </Box>\n      {/* Кнопки взаимодействия с пользователем */}\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(1, max-content)',\n          columnGap: '24px',\n          alignItems: 'center',\n          justifyContent: 'end',\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={async () => {\n            setSearchValue('');\n\n            const response = await axiosInstance.post('/add-invite-to-friends', { friendId: id });\n\n            socket.emit('on-add-invite-to-friends', id);\n\n            return response.data;\n          }}\n        >\n          Добавить в друзья\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport const UserAddInviteToFriendsMemoized = memo(UserAddInviteToFriends);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Box } from '@mui/material';\nimport { theme } from '../../theme';\nimport { memo, useState, useEffect } from 'react';\nimport { userUsersSelector } from 'modules/user/store/selectors';\nimport { TextField } from '../text-field';\n// import { requestUpdateUsersAction } from 'modules/user/store';\nimport { UserAddInviteToFriends } from '../user-add-invite-to-friends';\n\nconst AddToFriends = () => {\n  const dispatch = useDispatch();\n\n  const users = useSelector(userUsersSelector);\n\n  const [searchValue, setSearchValue] = useState('');\n\n  useEffect(() => {\n    if (searchValue) {\n      // dispatch(postUsersAction({ searchValue }));\n    }\n  }, [searchValue]);\n\n  return (\n    <Box sx={{ padding: '0 8px 0 16px', margin: '16px 8px 16px 0' }}>\n      <TextField\n        fullWidth\n        size=\"small\"\n        placeholder=\"Поиск по друзьям\"\n        value={searchValue}\n        onChange={(event) => setSearchValue(event.target.value)}\n      />\n      <Box\n        sx={{\n          padding: '0 8px 0 16px',\n          margin: '16px 8px 16px 0',\n          display: 'grid',\n          alignContent: 'start',\n          rowGap: '8px',\n          overflowY: 'scroll',\n          '&::-webkit-scrollbar': {\n            width: '4px',\n          },\n          '&::-webkit-scrollbar-track': {\n            backgroundColor: 'none',\n          },\n          '&::-webkit-scrollbar-thumb': {\n            backgroundColor: theme.palette.grey[300],\n            border: `1px solid ${theme.palette.grey[500]}`,\n            borderRadius: '8px',\n          },\n        }}\n      >\n        {users?.map((user) => {\n          return (\n            <UserAddInviteToFriends\n              key={user.id}\n              id={user.id}\n              name={user.name}\n              status={user.status}\n              setSearchValue={setSearchValue}\n            />\n          );\n        })}\n      </Box>\n    </Box>\n  );\n};\n\nexport const AddToFriendsMemoized = memo(AddToFriends);\n","import { css } from '@emotion/css';\nimport { AddPhotoAlternateOutlined, CancelOutlined, Check, Colorize, Edit } from '@mui/icons-material';\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Link, Slide, Snackbar, Typography } from '@mui/material';\nimport { Button } from 'core/components/button';\nimport { TextField } from 'core/components/text-field';\nimport { theme } from 'core/theme';\nimport { useTimer } from 'modules/user/hooks';\nimport { requestUpdateUserAction } from 'modules/user/store';\nimport { userUserSelector } from 'modules/user/store/selectors';\nimport { ChangeEvent, memo, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst UserProfile = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const user = useSelector(userUserSelector);\n\n  const [color, setColor] = useState('');\n  const [image, setImage] = useState(user?.image);\n  const [description, setDescription] = useState(user?.description);\n  const [isDefaultColor, setIsDefaultColor] = useState(true);\n  const [isFieldsChanged, setIsFieldsChanged] = useState(false);\n\n  const { minutes, seconds } = useTimer();\n\n  const imageInput = useRef<HTMLInputElement | null>(null);\n\n  const handleImageChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const image = event.target.files ? event.target.files[0] : null;\n    const fileReader = new FileReader();\n\n    if (image) {\n      fileReader.readAsDataURL(image);\n      fileReader.onload = () => {\n        const IMAGE_MAX_SIZE = 5 * 1024 * 1024;\n\n        if (image.size > IMAGE_MAX_SIZE) {\n          toast.error('Изображение должно быть не более 5MB.');\n        }\n\n        setImage(String(fileReader.result));\n      };\n    }\n\n    setImage(event.target.value);\n  };\n\n  useEffect(() => {\n    if (user?.description) {\n      setDescription(user.description);\n    }\n\n    if (user?.image) {\n      setImage(user.image);\n    }\n  }, [user?.description, user?.image]);\n\n  useEffect(() => {\n    const handleEscapeKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        navigate('friends');\n      }\n    };\n\n    document.addEventListener('keydown', handleEscapeKeyDown);\n\n    return () => document.removeEventListener('keydown', handleEscapeKeyDown);\n  }, []);\n\n  useEffect(() => {\n    if (color !== '' || image !== user?.image || description !== user?.description) {\n      setIsFieldsChanged(true);\n    } else {\n      setIsFieldsChanged(false);\n    }\n  }, [color, image, description]);\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        display: 'grid',\n        padding: '60px 40px 80px 40px',\n        alignContent: 'start',\n        backgroundColor: '#5e6065',\n      }}\n    >\n      {/* NOTE: Input для загрузки изображения */}\n      <TextField\n        sx={{ display: 'none' }}\n        type=\"file\"\n        id=\"image\"\n        name=\"image\"\n        label=\"Изображение профиля\"\n        inputProps={{ ref: (input: any) => (imageInput.current = input) }}\n        onChange={handleImageChange}\n        placeholder=\"Выберите изображение профиля\"\n        autoComplete=\"off\"\n        fullWidth\n        focused\n      />\n      {/* NOTE: Сохранение изменений профиля пользователя */}\n      <Snackbar\n        key={Slide.name}\n        message=\"Аккуратнее, вы не сохранили изменения!\"\n        TransitionComponent={Slide}\n        open={isFieldsChanged}\n        sx={{\n          '&': {\n            position: 'absolute',\n            left: '40px',\n            transform: 'none',\n            width: '100%',\n\n            '.MuiSnackbarContent-root': {\n              width: '100%',\n            },\n          },\n        }}\n        onClose={(event, reason) => {\n          if (reason === 'clickaway') {\n            return;\n          }\n\n          setIsFieldsChanged(false);\n        }}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        action={\n          <Box\n            sx={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(2, max-content)',\n              columnGap: '16px',\n              alignItems: 'center',\n            }}\n          >\n            <Link\n              sx={{ cursor: 'pointer' }}\n              underline=\"hover\"\n              onClick={() => {\n                setColor('');\n                setImage(user?.image);\n                setDescription(user?.description);\n              }}\n            >\n              <Typography>Сброс</Typography>\n            </Link>\n            <LoadingButton\n              sx={{ textTransform: 'initial' }}\n              variant=\"contained\"\n              color=\"success\"\n              onClick={() => {\n                dispatch(\n                  requestUpdateUserAction({\n                    color: color ? color : undefined,\n                    image: image !== user?.image ? image : undefined,\n                    description: description !== user?.description ? description : undefined,\n                  })\n                );\n\n                setColor('');\n                setImage(user?.image);\n                setDescription(user?.description);\n              }}\n            >\n              Сохранить изменения\n            </LoadingButton>\n          </Box>\n        }\n      />\n      <Typography\n        className={css`\n          padding-bottom: 20px !important;\n          font-weight: 600 !important;\n          font-size: 20px !important;\n          line-height: 24px !important;\n          color: #ffffff !important;\n          border-bottom: 1px solid #000000;\n        `}\n      >\n        Профиль пользователя\n      </Typography>\n      <Box\n        sx={{\n          display: 'grid',\n          rowGap: '8px',\n          position: 'absolute',\n          top: '60px',\n          right: '-40px',\n          textAlign: 'center',\n          cursor: 'pointer',\n\n          '&:hover svg, &:focus svg': {\n            fill: '#ffffff',\n          },\n        }}\n        onClick={() => navigate('/friends')}\n      >\n        <CancelOutlined sx={{ width: '36px', height: '36px', fill: '#b9bbbe' }} />\n        <Typography sx={{ fontSize: '13px', color: '#b9bbbe' }}>ESC</Typography>\n      </Box>\n      {/* NOTE: Аватар, цвет профиля и обо мне */}\n      <Box\n        sx={{ display: 'grid', gridTemplateColumns: '340px 300px', columnGap: '20px', justifyContent: 'space-between' }}\n      >\n        {/* NOTE: Аватар */}\n        <Box>\n          <Box sx={{ padding: '20px 0', borderBottom: '1px solid #000000' }}>\n            <Typography\n              className={css`\n                margin-bottom: 8px !important;\n                font-weight: 600 !important;\n                font-size: 12px !important;\n                line-height: 16px !important;\n                text-transform: uppercase !important;\n              `}\n            >\n              Аватар\n            </Typography>\n            <Box\n              sx={{\n                display: 'grid',\n                gridTemplateColumns: 'repeat(2, max-content)',\n                alignItems: 'center',\n                columnGap: '16px',\n              }}\n            >\n              <Button\n                sx={{ textTransform: 'initial' }}\n                variant=\"contained\"\n                onClick={() => {\n                  if (imageInput.current) {\n                    imageInput.current.click();\n                  }\n                }}\n              >\n                Смена аватара\n              </Button>\n              {user?.image && (\n                <Link\n                  sx={{ cursor: 'pointer', color: '#ffffff', fontFamily: 'sans-serif' }}\n                  underline=\"hover\"\n                  onClick={() => setImage('')}\n                >\n                  Удалить аватар\n                </Link>\n              )}\n            </Box>\n          </Box>\n          {/* NOTE: Цвет профиля */}\n          <Box sx={{ padding: '20px 0', borderBottom: '1px solid #000000' }}>\n            <Typography\n              className={css`\n                margin-bottom: 8px !important;\n                font-weight: 600 !important;\n                font-size: 12px !important;\n                line-height: 16px !important;\n                text-transform: uppercase !important;\n              `}\n            >\n              Цвет профиля\n            </Typography>\n            <Box sx={{ display: 'grid', gridTemplateColumns: 'max-content max-content', columnGap: '16px' }}>\n              {/* NOTE: По умолчанию */}\n              <Box>\n                <Box\n                  sx={{\n                    display: 'grid',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    backgroundColor: user?.color ? user.color : user?.default_color,\n                    width: '70px',\n                    height: '50px',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                  }}\n                  onClick={() => setIsDefaultColor(true)}\n                >\n                  {isDefaultColor && <Check sx={{ fill: '#ffffff' }} width={24} height={24} />}\n                </Box>\n                <Typography\n                  className={css`\n                    font-size: 12px !important;\n                    line-height: 16px !important;\n                  `}\n                >\n                  По умолчанию\n                </Typography>\n              </Box>\n              {/* NOTE: Пользовательские */}\n              <Box sx={{ position: 'relative' }}>\n                <Box\n                  sx={{\n                    position: 'relative',\n                    display: 'grid',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    backgroundColor: color,\n                    width: '70px',\n                    height: '50px',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                    border: color ? '' : '1px solid #000000',\n                  }}\n                  onClick={() => {\n                    setColor('#000000');\n                    setIsDefaultColor(false);\n                  }}\n                >\n                  {!isDefaultColor && <Check sx={{ fill: '#ffffff' }} width={24} height={24} />}\n                  <input\n                    className={css`\n                      position: absolute;\n                      top: 0;\n                      left: 0;\n                      width: 100%;\n                      height: 100%;\n                      cursor: pointer;\n                      opacity: 0;\n                    `}\n                    type=\"color\"\n                    value={color}\n                    onChange={(event) => {\n                      setColor(event.target.value);\n                      setIsDefaultColor(false);\n                    }}\n                  />\n                </Box>\n                <Colorize sx={{ position: 'absolute', top: '0', right: '8px' }} width={14} height={14} />\n                <Typography\n                  className={css`\n                    font-size: 12px !important;\n                    line-height: 16px !important;\n                  `}\n                >\n                  Пользовательские\n                </Typography>\n              </Box>\n            </Box>\n            {/* NOTE: Настройка баннера */}\n            <Box sx={{ paddingTop: '20px' }}>\n              <Typography\n                className={css`\n                  margin-bottom: 8px !important;\n                  font-weight: 600 !important;\n                  font-size: 12px !important;\n                  line-height: 16px !important;\n                  text-transform: uppercase !important;\n                `}\n              >\n                Баннер профиля\n              </Typography>\n              <Box sx={{ display: 'grid', rowGap: '16px', justifyItems: 'start' }}>\n                <Typography>\n                  Мы рекомендуем использовать изображение как минимум 600x240. Доступные форматы PNG, JPG или\n                  анимированные GIF размером не более 5МБ.\n                </Typography>\n                <Button\n                  sx={{ textTransform: 'initial' }}\n                  disableRipple\n                  disableElevation\n                  variant=\"contained\"\n                  color=\"success\"\n                  onClick={() => null}\n                >\n                  Загрузить баннер\n                </Button>\n              </Box>\n            </Box>\n          </Box>\n          {/* NOTE: Обо мне */}\n          <Box sx={{ padding: '20px 0' }}>\n            <Typography\n              className={css`\n                margin-bottom: 8px !important;\n                font-weight: 600 !important;\n                font-size: 12px !important;\n                line-height: 16px !important;\n                text-transform: uppercase !important;\n              `}\n            >\n              Обо мне\n            </Typography>\n            <Typography\n              className={css`\n                margin-bottom: 8px !important;\n                font-size: 14px !important;\n                line-height: 20px !important;\n              `}\n            >\n              Можно использовать разметку теста и ссылки.\n            </Typography>\n            {/* TODO: Максимальное число символов 190 и иконка открытия emoji. */}\n            <TextField\n              value={description}\n              onChange={(event) => setDescription(event.target.value)}\n              multiline\n              rows={4}\n              fullWidth\n            />\n          </Box>\n        </Box>\n        {/* NOTE: Предпросмотр */}\n        <Box>\n          <Box sx={{ padding: '20px 0 0 0' }}>\n            <Typography\n              className={css`\n                margin-bottom: 8px !important;\n                font-weight: 600 !important;\n                font-size: 12px !important;\n                line-height: 16px !important;\n                text-transform: uppercase !important;\n              `}\n            >\n              Предпросмотр\n            </Typography>\n          </Box>\n          {/* NOTE: Карточка */}\n          <Box\n            sx={{\n              display: 'grid',\n              gridTemplateRows: '60px 1fr',\n              width: '300px',\n              maxHeight: '429px',\n              boxShadow: '0 8px 16px rgba(0,0,0,0.25)',\n              borderRadius: '8px',\n              overflow: 'hidden',\n            }}\n          >\n            {/* NOTE: Карточка профиля пользователя */}\n            <Box\n              sx={{\n                position: 'relative',\n                height: '60px',\n                backgroundColor: user?.color ? user.color : user?.default_color,\n              }}\n            >\n              {/* NOTE: Аватар пользователя */}\n              <Box\n                sx={{\n                  position: 'absolute',\n                  top: '16px',\n                  left: '16px',\n                  width: '92px',\n                  height: '92px',\n                  backgroundImage: image ? `url(${image})` : `url(${user?.image})`,\n                  backgroundColor: user?.color ? user.color : user?.default_color,\n                  backgroundSize: 'cover',\n                  backgroundRepeat: 'no-repeat',\n                  backgroundPosition: '50% 50%',\n                  border: `6px solid ${theme.palette.grey[900]}`,\n                  borderRadius: '50%',\n                  cursor: 'pointer',\n\n                  '&:hover, &:focus': {\n                    '&::before': {\n                      content: '\"\"',\n                      display: 'block',\n                      width: '100%',\n                      height: '100%',\n                      backdropFilter: 'brightness(0.75)',\n                      borderRadius: '50%',\n                      overflow: 'hidden',\n                    },\n                    '&::after': {\n                      content: '\"Изменить аватар\"',\n                      display: 'block',\n                      position: 'absolute',\n                      top: '50%',\n                      left: '50%',\n                      transform: 'translate(-50%, -50%)',\n                      textAlign: 'center',\n                      color: 'white',\n                      fontFamily: 'sans-serif',\n                      textTransform: 'uppercase',\n                      fontSize: '10px',\n                    },\n                  },\n                }}\n                onClick={() => {\n                  if (imageInput.current) {\n                    imageInput.current.click();\n                  }\n                }}\n              >\n                <Box\n                  sx={{\n                    width: '28px',\n                    height: '28px',\n                    backgroundColor: theme.palette.grey[300],\n                    position: 'absolute',\n                    top: '0',\n                    right: '0',\n                    borderRadius: '50%',\n                  }}\n                >\n                  <AddPhotoAlternateOutlined\n                    sx={{\n                      width: '18px',\n                      height: '18px',\n                      position: 'absolute',\n                      top: '50%',\n                      left: '50%',\n                      transform: 'translate(-50%, -50%)',\n                    }}\n                  />\n                </Box>\n              </Box>\n            </Box>\n            {/* Card user info */}\n            <Box\n              sx={{\n                padding: '48px 16px 16px 16px',\n                backgroundColor: theme.palette.grey['900'],\n              }}\n            >\n              {/* NOTE: Имя пользователя */}\n              <Typography\n                className={css`\n                  padding: 16px 0;\n                  color: #ffffff;\n                `}\n              >\n                {user?.name}\n                {/* NOTE: Тег пользователя */}\n                <Typography\n                  className={css`\n                    font-size: 20px;\n                    line-height: 24px;\n                    color: #b9bbbe;\n                    text-transform: uppercase;\n                  `}\n                  component=\"span\"\n                >\n                  #{user?.id.slice(-4)}\n                </Typography>\n              </Typography>\n              {/* NOTE: Обо мне */}\n              <Typography\n                className={css`\n                  margin-bottom: 8px !important;\n                  padding: 20px 0 0 0 !important;\n                  font-weight: 600 !important;\n                  font-size: 12px !important;\n                  line-height: 16px !important;\n                  color: #b9bbbe;\n                  text-transform: uppercase !important;\n                  border-top: 1px solid ${theme.palette.grey[800]};\n                `}\n                variant=\"subtitle1\"\n              >\n                Обо мне\n              </Typography>\n              <Typography sx={{ maxHeight: '108px', paddingBottom: '20px' }} color=\"lightgray\">\n                {description}\n              </Typography>\n              {/* NOTE: Настройка профиля */}\n              <Typography\n                className={css`\n                  margin-bottom: 8px !important;\n                  padding: 20px 0 0 0 !important;\n                  font-weight: 600 !important;\n                  font-size: 12px !important;\n                  line-height: 16px !important;\n                  color: #b9bbbe;\n                  text-transform: uppercase !important;\n                  border-top: 1px solid ${theme.palette.grey[800]};\n                `}\n                variant=\"subtitle1\"\n              >\n                Настройка профиля\n              </Typography>\n              <Box sx={{ display: 'grid', gridTemplateColumns: '64px 1fr', columnGap: '16px', alignItems: 'center' }}>\n                {/* Edit icon */}\n                <Box\n                  sx={{\n                    width: '64px',\n                    height: '64px',\n                    backgroundColor: theme.palette.primary.light,\n                    borderRadius: '8px',\n                    display: 'grid',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Edit sx={{ fill: '#ffffff' }} width={24} height={24} />\n                </Box>\n                {/* Edit info */}\n                <Box>\n                  <Typography variant=\"subtitle1\" color=\"lightgray\">\n                    Профиль пользователя\n                  </Typography>\n                  <Typography color=\"lightgray\">\n                    Прошло {minutes}:{seconds}\n                  </Typography>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport const UserProfileMemoized = memo(UserProfile);\n","import { useEffect, useRef, useState } from 'react';\n\n/**\n * Hook that return timer values.\n */\nexport const useTimer = () => {\n  const [timer, setTimer] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimer((prevValue) => prevValue + 1);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const minutes = Math.floor(timer / 60)\n    .toString()\n    .padStart(2, '0');\n\n  const seconds = Number(timer - Math.floor(timer / 60) * 60)\n    .toString()\n    .padStart(2, '0');\n\n  return { minutes, seconds };\n};\n\n/**\n * Hook который возвращает медиа поток, его статус и возможные ошибки.\n */\nexport const useUserMedia = () => {\n  const [state, setState] = useState<'pending' | 'fulfilled' | 'rejected' | undefined>();\n  const [stream, setStream] = useState<MediaStream | undefined>();\n  const [error, setError] = useState<unknown | undefined>();\n\n  const getUserMedia = async (constraints?: MediaStreamConstraints | undefined) => {\n    try {\n      setState('pending');\n\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n      setState('fulfilled');\n      setStream(stream);\n    } catch (error) {\n      setState('rejected');\n      setError(error);\n    }\n  };\n\n  const stopUserMedia = () => {\n    if (stream) {\n      stream.getTracks().forEach((track) => {\n        track.stop();\n      });\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      stopUserMedia();\n    };\n  }, [stream]);\n\n  return { state, stream, error, getUserMedia, stopUserMedia };\n};\n\n/**\n * Hook которые возвращает список медиаустройств по типам.\n */\nexport const useDeviceInfo = () => {\n  const [state, setState] = useState<'pending' | 'fulfilled' | 'rejected' | undefined>();\n  const [audioInDevices, setAudioInDevices] = useState<MediaDeviceInfo[]>([]);\n  const [audioOutDevices, setAudioOutDevices] = useState<MediaDeviceInfo[]>([]);\n  const [videoInDevices, setVideoInDevices] = useState<MediaDeviceInfo[]>([]);\n  const [error, setError] = useState<unknown | undefined>();\n\n  const getDeviceInfo = async () => {\n    try {\n      setState('pending');\n\n      const devices = await navigator.mediaDevices.enumerateDevices();\n\n      setState('fulfilled');\n\n      const audioInDevices = devices.filter((device) => device.kind === 'audioinput');\n      const audioOutDevices = devices.filter((device) => device.kind === 'audiooutput');\n      const videoInDevices = devices.filter((device) => device.kind === 'videoinput');\n\n      setAudioInDevices(audioInDevices);\n      setAudioOutDevices(audioOutDevices);\n      setVideoInDevices(videoInDevices);\n    } catch (error) {\n      setState('rejected');\n      setError(error);\n    }\n  };\n\n  return { state, audioInDevices, audioOutDevices, videoInDevices, error, getDeviceInfo };\n};\n","import { Close } from '@mui/icons-material';\nimport { Box, Link, Modal, Typography } from '@mui/material';\nimport { Button } from 'core/components/button';\nimport { TextField } from 'core/components/text-field';\nimport { requestUpdateUserAction } from 'modules/user/store';\nimport { memo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst ModalChangeUserEmail = ({ isOpen, onClose }: { isOpen: boolean; onClose: () => void }) => {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <Modal open={isOpen} onBackdropClick={onClose} disableEnforceFocus>\n      <Box\n        sx={{\n          width: '440px',\n          backgroundColor: '#4a4c52',\n          position: 'fixed',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          borderRadius: '5px',\n          overflow: 'hidden',\n        }}\n      >\n        <Box sx={{ position: 'relative', display: 'grid', rowGap: '8px', padding: '24px 16px' }}>\n          <Typography sx={{ fontSize: '24px', color: '#ffffff', textAlign: 'center' }}>\n            Введите адрес электронной почты\n          </Typography>\n          <Typography sx={{ fontSize: '16px', color: '#c0c1c4', textAlign: 'center' }}>\n            Введите новый адрес электронной почты и текущий пароль.\n          </Typography>\n          <Box\n            sx={{\n              position: 'absolute',\n              top: '16px',\n              right: '16px',\n              cursor: 'pointer',\n\n              '& svg': {\n                fill: '#c0c1c4',\n              },\n              '& svg:hover, & svg:focus': {\n                fill: '#ffffff',\n              },\n            }}\n            onClick={onClose}\n          >\n            <Close />\n          </Box>\n        </Box>\n        <Box sx={{ display: 'grid', rowGap: '16px', padding: '0 16px 24px 16px' }}>\n          <Box sx={{ display: 'grid', rowGap: '8px' }}>\n            <Typography sx={{ fontSize: '14px', color: '#c0c1c4', textTransform: 'uppercase' }}>\n              Электронная почта\n            </Typography>\n            <TextField\n              sx={{\n                backgroundColor: '#36383a',\n\n                '.MuiOutlinedInput-input': {\n                  color: '#dfe0e1',\n                },\n\n                // NOTE: Удаляет светлую тень в браузерных стилях\n                'input:-webkit-autofill': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n                'input:-webkit-autofill:hover': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n                'input:-webkit-autofill:focus': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n                'input:-webkit-autofill:active': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n              }}\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(event) => setEmail(event.target.value)}\n              autoComplete=\"off\"\n              fullWidth\n            />\n          </Box>\n          <Box sx={{ display: 'grid', rowGap: '8px' }}>\n            <Typography sx={{ fontSize: '14px', color: '#c0c1c4', textTransform: 'uppercase' }}>\n              Текущий пароль\n            </Typography>\n            <TextField\n              sx={{\n                backgroundColor: '#36383a',\n\n                '.MuiOutlinedInput-input': {\n                  color: '#dfe0e1',\n                },\n\n                // NOTE: Удаляет светлую тень в браузерных стилях\n                'input:-webkit-autofill': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n                'input:-webkit-autofill:hover': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n                'input:-webkit-autofill:focus': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n                'input:-webkit-autofill:active': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n              }}\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={(event) => setPassword(event.target.value)}\n              autoComplete=\"off\"\n              fullWidth\n            />\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            display: 'grid',\n            justifyContent: 'end',\n            gridTemplateColumns: 'repeat(2, max-content)',\n            columnGap: '8px',\n            padding: '16px',\n            backgroundColor: '#43454a',\n          }}\n        >\n          <Link\n            sx={{ display: 'grid', alignItems: 'center', color: '#ffffff', cursor: 'pointer', padding: '2px 16px' }}\n            underline=\"hover\"\n            onClick={() => {\n              setEmail('');\n              setPassword('');\n              onClose();\n            }}\n          >\n            <Typography sx={{ fontSize: '14px' }}>Отмена</Typography>\n          </Link>\n          <Button\n            sx={{ textTransform: 'initial' }}\n            variant=\"contained\"\n            onClick={() => {\n              // TODO: Добавить валидацию на email и длину пароля\n              if (email.trim() && password.trim()) {\n                dispatch(requestUpdateUserAction({ email, password }));\n                onClose();\n              }\n            }}\n          >\n            Готово\n          </Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nexport const ModalChangeUserEmailMemoized = memo(ModalChangeUserEmail);\n","import { Close } from '@mui/icons-material';\nimport { Box, Link, Modal, Typography } from '@mui/material';\nimport { Button } from 'core/components/button';\nimport { TextField } from 'core/components/text-field';\nimport { RootState } from 'core/store/types';\nimport { requestUpdateUserAction } from 'modules/user/store';\nimport { memo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst ModalChangeUserName = ({ isOpen, onClose }: { isOpen: boolean; onClose: () => void }) => {\n  const dispatch = useDispatch();\n\n  const { user } = useSelector((state: RootState) => state.user);\n\n  const [name, setName] = useState(user?.name);\n  const [password, setPassword] = useState('');\n\n  return (\n    <Modal open={isOpen} onBackdropClick={onClose} disableEnforceFocus>\n      <Box\n        sx={{\n          width: '440px',\n          backgroundColor: '#4a4c52',\n          position: 'fixed',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          borderRadius: '5px',\n          overflow: 'hidden',\n        }}\n      >\n        <Box sx={{ position: 'relative', display: 'grid', rowGap: '8px', padding: '24px 16px' }}>\n          <Typography sx={{ fontSize: '24px', color: '#ffffff', textAlign: 'center' }}>\n            Изменить имя пользователя\n          </Typography>\n          <Typography sx={{ fontSize: '16px', color: '#c0c1c4', textAlign: 'center' }}>\n            Введите новое имя пользователя и текущий пароль.\n          </Typography>\n          <Box\n            sx={{\n              position: 'absolute',\n              top: '16px',\n              right: '16px',\n              cursor: 'pointer',\n\n              '& svg': {\n                fill: '#c0c1c4',\n              },\n              '& svg:hover, & svg:focus': {\n                fill: '#ffffff',\n              },\n            }}\n            onClick={onClose}\n          >\n            <Close sx={{}} />\n          </Box>\n        </Box>\n        <Box sx={{ display: 'grid', rowGap: '16px', padding: '0 16px 24px 16px' }}>\n          <Box sx={{ display: 'grid', rowGap: '8px' }}>\n            <Typography sx={{ fontSize: '14px', color: '#c0c1c4', textTransform: 'uppercase' }}>\n              Имя пользователя\n            </Typography>\n            <TextField\n              sx={{\n                backgroundColor: '#36383a',\n\n                '.MuiOutlinedInput-input': {\n                  color: '#dfe0e1',\n                },\n\n                // NOTE: Удаляет светлую тень в браузерных стилях\n                'input:-webkit-autofill': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n                'input:-webkit-autofill:hover': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n                'input:-webkit-autofill:focus': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n                'input:-webkit-autofill:active': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n              }}\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              autoComplete=\"off\"\n              fullWidth\n            />\n          </Box>\n          <Box sx={{ display: 'grid', rowGap: '8px' }}>\n            <Typography sx={{ fontSize: '14px', color: '#c0c1c4', textTransform: 'uppercase' }}>\n              Текущий пароль\n            </Typography>\n            <TextField\n              sx={{\n                backgroundColor: '#36383a',\n\n                '.MuiOutlinedInput-input': {\n                  color: '#dfe0e1',\n                },\n\n                // NOTE: Удаляет светлую тень в браузерных стилях\n                'input:-webkit-autofill': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n                'input:-webkit-autofill:hover': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n                'input:-webkit-autofill:focus': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n                'input:-webkit-autofill:active': {\n                  boxShadow: '0 0 0 30px #36383a inset',\n                },\n              }}\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={(event) => setPassword(event.target.value)}\n              autoComplete=\"off\"\n              fullWidth\n            />\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            display: 'grid',\n            justifyContent: 'end',\n            gridTemplateColumns: 'repeat(2, max-content)',\n            columnGap: '8px',\n            padding: '16px',\n            backgroundColor: '#43454a',\n          }}\n        >\n          <Link\n            sx={{ display: 'grid', alignItems: 'center', color: '#ffffff', cursor: 'pointer', padding: '2px 16px' }}\n            underline=\"hover\"\n            onClick={() => {\n              setName(user?.name);\n              setPassword('');\n              onClose();\n            }}\n          >\n            <Typography sx={{ fontSize: '14px' }}>Отмена</Typography>\n          </Link>\n          <Button\n            sx={{ textTransform: 'initial' }}\n            variant=\"contained\"\n            onClick={() => {\n              if (name?.trim() && password.trim()) {\n                dispatch(requestUpdateUserAction({ name, password }));\n                onClose();\n              }\n            }}\n          >\n            Готово\n          </Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nexport const ModalChangeUserNameMemoized = memo(ModalChangeUserName);\n","import { CancelOutlined } from '@mui/icons-material';\nimport { Box, Typography, Link } from '@mui/material';\nimport { Button } from 'core/components/button';\nimport { getHiddenUserEmail } from 'modules/user/utils';\nimport { userUserSelector } from 'modules/user/store/selectors';\nimport { memo, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { ModalChangeUserEmailMemoized } from '../../modals/modal-change-user-email';\nimport { ModalChangeUserNameMemoized } from '../../modals/modal-change-user-name';\n\nconst UserAccount = () => {\n  const navigate = useNavigate();\n\n  const user = useSelector(userUserSelector);\n\n  const [isEmailShow, setIsEmailShow] = useState(false);\n  const [isModalChangeUserName, setIsModalChangeUserName] = useState(false);\n  const [isModalChangeUserEmail, setIsModalChangeUserEmail] = useState(false);\n\n  useEffect(() => {\n    const handleEscapeKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        navigate('friends');\n      }\n    };\n\n    document.addEventListener('keydown', handleEscapeKeyDown);\n\n    return () => document.removeEventListener('keydown', handleEscapeKeyDown);\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        display: 'grid',\n        padding: '60px 40px 80px 40px',\n        alignContent: 'start',\n        backgroundColor: '#5e6065',\n      }}\n    >\n      <ModalChangeUserNameMemoized isOpen={isModalChangeUserName} onClose={() => setIsModalChangeUserName(false)} />\n      <ModalChangeUserEmailMemoized isOpen={isModalChangeUserEmail} onClose={() => setIsModalChangeUserEmail(false)} />\n      <Typography\n        sx={{ paddingBottom: '20px', fontWeight: 600, fontSize: '20px', lineHeight: '24px', color: '#ffffff' }}\n      >\n        Моя учетная запись\n      </Typography>\n      <Box\n        sx={{\n          display: 'grid',\n          rowGap: '8px',\n          position: 'absolute',\n          top: '60px',\n          right: '-40px',\n          textAlign: 'center',\n          cursor: 'pointer',\n\n          '&:hover svg, &:focus svg': {\n            fill: '#ffffff',\n          },\n        }}\n        onClick={() => navigate('friends')}\n      >\n        <CancelOutlined sx={{ width: '36px', height: '36px', fill: '#b9bbbe' }} />\n        <Typography sx={{ fontSize: '13px', color: '#b9bbbe' }}>ESC</Typography>\n      </Box>\n      {/* NOTE: Содержимое страницы */}\n      <Box sx={{ display: 'grid' }}>\n        {/* NOTE: Предупреждение для подтверждения почты */}\n        <Box sx={{ backgroundColor: '#36383a', border: '1px solid#1c1e21', borderRadius: '4px', padding: '20px' }}>\n          <Box>{/* NOTE: Иконка предупреждения */}</Box>\n          <Box sx={{ display: 'grid', rowGap: '8px', justifyItems: 'start' }}>\n            <Typography sx={{ fontSize: '12px', color: '#c0c1c4', textTransform: 'uppercase' }}>\n              Неподтвержденный адрес эл.почты\n            </Typography>\n            <Typography sx={{ fontSize: '14px', color: '#dfe0e1' }}>\n              Пожалуйста, проверьте свою электронную почту и следуйте инструкциям, чтобы подтвердить свой адресс\n              электронной почты. Если вы не получили письмо или у него истек срок действия, вы можете попросить\n              отправить новое.\n            </Typography>\n            <Button\n              sx={{\n                textTransform: 'none',\n                backgroundColor: '#686d73',\n\n                '&:hover, &:focus': {\n                  backgroundColor: '#84888d',\n                },\n\n                '&:active': {\n                  backgroundColor: '#6b6e74',\n                },\n              }}\n              variant=\"contained\"\n            >\n              Отправить письмо с подтверждением еще раз\n            </Button>\n          </Box>\n        </Box>\n        {/* NOTE: Профиль пользователя */}\n        <Box sx={{ margin: '20px 0', backgroundColor: '#36383a', borderRadius: '4px', overflow: 'hidden' }}>\n          <Box\n            sx={{\n              position: 'relative',\n              backgroundColor: user?.color ? user.color : user?.default_color,\n              height: '100px',\n            }}\n          >\n            {/* NOTE: Аватар пользователя */}\n            <Box\n              sx={{\n                position: 'absolute',\n                top: '76px',\n                left: '16px',\n                width: '94px',\n                height: '94px',\n                backgroundImage: user?.image ? `url(${user?.image})` : 'none',\n                backgroundColor: user?.color ? user.color : user?.default_color,\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n                backgroundPosition: '50% 50%',\n                border: `6px solid #36383a`,\n                borderRadius: '50%',\n                cursor: 'pointer',\n              }}\n            >\n              <Box\n                sx={{\n                  width: '24px',\n                  height: '24px',\n                  backgroundColor: user?.status === 'online' ? '#4caf50' : '#ef5350',\n                  position: 'absolute',\n                  bottom: 0,\n                  right: 0,\n                  borderRadius: '50%',\n                  border: '4px solid #36383a',\n                }}\n              />\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(2, max-content)',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              padding: '16px 16px 16px 120px',\n            }}\n          >\n            <Typography sx={{ fontSize: '20px', color: '#ffffff' }}>\n              {user?.name}\n              <Typography component=\"span\" sx={{ fontSize: '20px', color: '#c0c1c4' }}>\n                #{user?.id.slice(-4)}\n              </Typography>\n            </Typography>\n            <Button\n              sx={{ textTransform: 'none' }}\n              variant=\"contained\"\n              onClick={() => navigate('/settings/user-profile')}\n            >\n              Настр. профиль пользователя\n            </Button>\n          </Box>\n          <Box\n            sx={{ display: 'grid', margin: '16px', padding: '16px', backgroundColor: '#43454a', borderRadius: '4px' }}\n          >\n            {/* NOTE: Имя пользователя */}\n            <Box\n              sx={{\n                display: 'grid',\n                gridTemplateColumns: 'repeat(2, max-content)',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                padding: '8px 0',\n              }}\n            >\n              <Box>\n                <Typography sx={{ fontSize: '12px', color: '#c0c1c4', textTransform: 'uppercase' }}>\n                  Имя пользователя\n                </Typography>\n                <Typography sx={{ fontSize: '16px', color: '#ffffff' }}>\n                  {user?.name}\n                  <Typography component=\"span\" sx={{ fontSize: '16px', color: '#c0c1c4', textTransform: 'uppercase' }}>\n                    #{user?.id.slice(-4)}\n                  </Typography>\n                </Typography>\n              </Box>\n              <Button\n                sx={{\n                  textTransform: 'none',\n                  backgroundColor: '#686d73',\n\n                  '&:hover, &:focus': {\n                    backgroundColor: '#84888d',\n                  },\n\n                  '&:active': {\n                    backgroundColor: '#6b6e74',\n                  },\n                }}\n                variant=\"contained\"\n                onClick={() => setIsModalChangeUserName(true)}\n              >\n                Изменить\n              </Button>\n            </Box>\n            {/* NOTE: Электронная почта */}\n            <Box\n              sx={{\n                display: 'grid',\n                gridTemplateColumns: 'repeat(2, max-content)',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                padding: '8px 0',\n              }}\n            >\n              <Box>\n                <Typography sx={{ fontSize: '12px', color: '#c0c1c4', textTransform: 'uppercase' }}>\n                  Электронная почта\n                </Typography>\n                <Typography\n                  sx={{\n                    display: 'grid',\n                    gridTemplateColumns: 'repeat(2, max-content)',\n                    columnGap: '8px',\n                    fontSize: '16px',\n                    color: '#ffffff',\n                  }}\n                >\n                  {isEmailShow ? user?.email : getHiddenUserEmail(user?.email as string)}\n                  <Link\n                    sx={{ cursor: 'pointer', color: '#19b7f5' }}\n                    underline=\"hover\"\n                    onClick={() => setIsEmailShow(!isEmailShow)}\n                  >\n                    <Typography>{isEmailShow ? 'Скрыть' : 'Показать'}</Typography>\n                  </Link>\n                </Typography>\n              </Box>\n              <Button\n                sx={{\n                  textTransform: 'none',\n                  backgroundColor: '#686d73',\n\n                  '&:hover, &:focus': {\n                    backgroundColor: '#84888d',\n                  },\n\n                  '&:active': {\n                    backgroundColor: '#6b6e74',\n                  },\n                }}\n                variant=\"contained\"\n                onClick={() => setIsModalChangeUserEmail(true)}\n              >\n                Изменить\n              </Button>\n            </Box>\n            {/* NOTE: Номер телефона */}\n            <Box\n              sx={{\n                display: 'grid',\n                gridTemplateColumns: 'repeat(2, max-content)',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                padding: '8px 0',\n              }}\n            >\n              <Box>\n                <Typography sx={{ fontSize: '12px', color: '#c0c1c4', textTransform: 'uppercase' }}>\n                  Номер телефона\n                </Typography>\n                <Typography sx={{ fontSize: '16px', color: '#ffffff' }}>\n                  {/* TODO: Добавить поле телефона в модель пользователя */}\n                  {/* {user?.phone ? user.phone : 'Вы еще не указали номер телефона.'} */}\n                  Вы еще не указали номер телефона.\n                </Typography>\n              </Box>\n              <Button\n                sx={{\n                  textTransform: 'none',\n                  backgroundColor: '#686d73',\n\n                  '&:hover, &:focus': {\n                    backgroundColor: '#84888d',\n                  },\n\n                  '&:active': {\n                    backgroundColor: '#6b6e74',\n                  },\n                }}\n                variant=\"contained\"\n                disabled\n              >\n                Изменить\n              </Button>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport const UserAccountMemoized = memo(UserAccount);\n","export const getHiddenUserEmail = (email: string) => {\n  const firstPartEndIndex = email.search('@');\n  const hiddenValues = Array(firstPartEndIndex).fill('*').join('');\n\n  return hiddenValues + email.slice(firstPartEndIndex);\n};\n","import { memo, useEffect, useRef, useState } from 'react';\nimport { css } from '@emotion/css';\nimport { CancelOutlined } from '@mui/icons-material';\nimport {\n  Box,\n  Divider,\n  FormControlLabel,\n  LinearProgress,\n  Link,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  Slider,\n  Switch,\n  Typography,\n} from '@mui/material';\nimport { Button } from 'core/components/button';\nimport { theme } from 'core/theme';\nimport { useDeviceInfo, useUserMedia } from 'modules/user/hooks';\nimport { useNavigate } from 'react-router-dom';\n\nconst VoiceAndVideo = () => {\n  const navigate = useNavigate();\n\n  const { state, stream, getUserMedia } = useUserMedia();\n  const { audioInDevices, audioOutDevices, videoInDevices, getDeviceInfo } = useDeviceInfo();\n\n  const [audioInDevice, setAudioInDevice] = useState('');\n  const [audioOutDevice, setAudioOutDevice] = useState('');\n  const [videoInDevice, setVideoInDevice] = useState('');\n\n  const [isAudio, setIsAudio] = useState(false);\n  const [isVideo, setIsVideo] = useState(false);\n\n  const userVideo = useRef<HTMLVideoElement>();\n  const userAudio = useRef<HTMLAudioElement>();\n\n  useEffect(() => {\n    if (audioInDevices.length > 0) {\n      setAudioInDevice(audioInDevices[0].deviceId);\n    }\n\n    if (audioOutDevices.length > 0) {\n      setAudioOutDevice(audioOutDevices[0].deviceId);\n    }\n\n    if (videoInDevices.length > 0) {\n      setVideoInDevice(videoInDevices[0].deviceId);\n    }\n  }, [audioInDevices, audioOutDevices, videoInDevices]);\n\n  useEffect(() => {\n    if (state === 'fulfilled') {\n      getDeviceInfo();\n    }\n  }, [state]);\n\n  useEffect(() => {\n    getDeviceInfo();\n    getUserMedia({ audio: true, video: false });\n  }, []);\n\n  useEffect(() => {\n    if (state === 'fulfilled' && stream && userAudio.current && userVideo.current) {\n      const audioStream = new MediaStream(stream.getAudioTracks());\n      const videoStream = new MediaStream(stream.getVideoTracks());\n      userAudio.current.srcObject = audioStream;\n      userVideo.current.srcObject = videoStream;\n    }\n\n    return () => {\n      if (userAudio.current && userVideo.current) {\n        userAudio.current.srcObject = null;\n        userVideo.current.srcObject = null;\n      }\n    };\n  }, [state, stream]);\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        display: 'grid',\n        padding: '60px 40px 80px 40px',\n        alignContent: 'start',\n        backgroundColor: '#5e6065',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'grid',\n          rowGap: '8px',\n          position: 'absolute',\n          top: '60px',\n          right: '-40px',\n          textAlign: 'center',\n          cursor: 'pointer',\n\n          '&:hover svg, &:focus svg': {\n            fill: '#ffffff',\n          },\n        }}\n        onClick={() => navigate('/friends')}\n      >\n        <CancelOutlined sx={{ width: '36px', height: '36px', fill: '#b9bbbe' }} />\n        <Typography sx={{ fontSize: '13px', color: '#b9bbbe' }}>ESC</Typography>\n      </Box>\n      {/* NOTE: Настройки голоса */}\n      <Typography\n        className={css`\n          padding-bottom: 20px !important;\n          font-weight: 600 !important;\n          font-size: 20px !important;\n          line-height: 24px !important;\n          color: #ffffff !important;\n        `}\n      >\n        Насройки голоса\n      </Typography>\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(2, 320px)',\n          alignItems: 'center',\n          columnGap: '16px',\n          marginBottom: '16px',\n        }}\n      >\n        <Box>\n          <Typography>Устройство ввода</Typography>\n          <Select\n            id=\"audioInDevice\"\n            value={audioInDevice || 'default'}\n            onChange={(event) => setAudioInDevice(event.target.value)}\n            fullWidth\n          >\n            {audioInDevices.map((audioInDevice) => {\n              return (\n                <MenuItem\n                  key={audioInDevice.deviceId}\n                  sx={{ maxWidth: '320px', whiteSpace: 'normal' }}\n                  value={audioInDevice.deviceId || 'default'}\n                >\n                  {audioInDevice.label || 'Default'}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </Box>\n        <Box>\n          <Typography>Устройство вывода</Typography>\n          <Select\n            id=\"audioOutDevice\"\n            value={audioOutDevice || 'default'}\n            onChange={(event) => setAudioOutDevice(event.target.value)}\n            fullWidth\n          >\n            {audioOutDevices.map((audioOutDevice) => {\n              return (\n                <MenuItem\n                  key={audioOutDevice.deviceId}\n                  sx={{ maxWidth: '320px', whiteSpace: 'normal' }}\n                  value={audioOutDevice.deviceId || 'default'}\n                >\n                  {audioOutDevice.label || 'Default'}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </Box>\n        {/* NOTE: Громкость микрофона */}\n        <Box\n          sx={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(2, 320px)',\n            alignItems: 'center',\n            columnGap: '16px',\n            marginBottom: '16px',\n          }}\n        >\n          <Box>\n            <Typography>Громкость микрофона</Typography>\n            <Slider defaultValue={100} valueLabelDisplay=\"auto\" max={100} />\n          </Box>\n          <Box>\n            <Typography>Громкость звука</Typography>\n            <Slider defaultValue={100} valueLabelDisplay=\"auto\" max={200} />\n          </Box>\n        </Box>\n      </Box>\n      {/* NOTE: Громкость микрофона */}\n      <Box\n        sx={{\n          display: 'grid',\n          marginBottom: '16px',\n        }}\n      >\n        <Typography>Проверка микрофона</Typography>\n        <Typography variant=\"caption\">\n          Проблемы с микрофоном? Начните проверку и скажите какую-нибудь ерунду - мы тут же ее воспроизведем.\n        </Typography>\n        <Box sx={{ display: 'grid', gridTemplateColumns: 'max-content 1fr', alignItems: 'center', columnGap: '8px' }}>\n          <Button variant=\"contained\" onClick={() => setIsAudio(!isAudio)}>\n            {isAudio ? 'Прекратить проверку' : 'Давайте проверим'}\n          </Button>\n          <Box>\n            <LinearProgress variant=\"determinate\" value={0} />\n            {isAudio && <Typography variant=\"caption\">Воспроизводим ваш прекрасный голос</Typography>}\n          </Box>\n          {/* NOTE: Audio компонент */}\n          <Box component=\"audio\" ref={userAudio} autoPlay muted={!isAudio} />\n        </Box>\n        <Typography variant=\"caption\">\n          Нужна помощь с голосовым или видеочатом? Ознакомьтесь с нашим{' '}\n          <Link>руководством по устранению неполадок</Link>.\n        </Typography>\n      </Box>\n      <Divider sx={{ margin: '32px 0', borderColor: theme.palette.grey['800'] }} />\n      {/* NOTE: Режим ввода */}\n      <Box>\n        <Typography>Режим ввода</Typography>\n        <RadioGroup defaultValue=\"voice\">\n          <FormControlLabel value=\"voice\" control={<Radio />} label=\"Активация по голосу\" />\n          <FormControlLabel value=\"button\" control={<Radio />} label=\"Режим рации (ограниченный)\" />\n        </RadioGroup>\n      </Box>\n      {/* NOTE: Чувствительность ввода */}\n      <Box>\n        <Typography>Чувствительнось ввода</Typography>\n        <Slider defaultValue={40} valueLabelDisplay=\"auto\" max={100} />\n        {/* TODO: Добавить текущий уровень ввода */}\n        {/* {noPermission && (\n          <Typography>\n            У вас нет подключенных устройств ввода. Вы должны разрешить Video Calls{' '}\n            <Link>доступ к вашему микрофону</Link> для того, чтобы вы могли наблюдать чувствительность устройств ввода.\n          </Typography>\n        )} */}\n      </Box>\n      <Divider sx={{ margin: '32px 0', borderColor: theme.palette.grey['800'] }} />\n      {/* NOTE: Настройки видео */}\n      <Box>\n        <Typography\n          className={css`\n            font-weight: 600 !important;\n            font-size: 20px !important;\n            line-height: 24px !important;\n            color: #ffffff !important;\n          `}\n        >\n          Насройки видео\n        </Typography>\n        <Box sx={{ display: 'grid', rowGap: '16px' }}>\n          <Box\n            sx={{\n              position: 'relative',\n              width: '100%',\n              height: '220px',\n              backgroundColor: theme.palette.grey['500'],\n              display: 'grid',\n              alignItems: 'center',\n              justifyContent: 'center',\n              borderRadius: '8px',\n              boxShadow: `inset 0 0 0 1px ${theme.palette.grey['800']}`,\n            }}\n          >\n            <Box\n              sx={{ position: 'absolute', top: '0', left: '0', width: '100%', height: '100%' }}\n              component=\"video\"\n              ref={userVideo}\n              autoPlay\n              muted\n            />\n            {!isVideo && (\n              <Button\n                variant=\"contained\"\n                onClick={() => {\n                  getUserMedia({ audio: true, video: true });\n                  setIsVideo(true);\n                }}\n              >\n                Проверить видео\n              </Button>\n            )}\n          </Box>\n        </Box>\n      </Box>\n      {/* NOTE: Предпросмотр видео */}\n      <Box>\n        <Box\n          sx={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(2, max-content)',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <Typography>Препросмотр видео (всегда)</Typography>\n          <Switch checked={false} />\n        </Box>\n        <Typography>Использовать предпросмотр каждый раз, как вы включаете видео</Typography>\n      </Box>\n      {/* NOTE: Камера */}\n      <Box>\n        <Typography>Камера</Typography>\n        <Select\n          id=\"videoInDevice\"\n          value={videoInDevice || 'default'}\n          onChange={(event) => setVideoInDevice(event.target.value)}\n          fullWidth\n        >\n          {videoInDevices.map((videoInDevice) => {\n            return (\n              <MenuItem\n                key={videoInDevice.deviceId}\n                sx={{ maxWidth: '320px', whiteSpace: 'normal' }}\n                value={videoInDevice.deviceId || 'default'}\n              >\n                {videoInDevice.label || 'Default'}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </Box>\n      <Divider sx={{ margin: '32px 0', borderColor: theme.palette.grey['800'] }} />\n      {/* NOTE: Расширенные */}\n      <Box>\n        <Typography>Расширенные</Typography>\n        {/* NOTE: Аудио кодек */}\n        <Box>\n          <Typography>Аудио кодек</Typography>\n          <Box sx={{ border: '1px solid #000000' }}>\n            <Typography>\n              Video Calls использует отборный, органический, выращенный на домашней грядке голосовой кодек Opus,\n            </Typography>\n          </Box>\n        </Box>\n        {/* NOTE: Обработка голоса */}\n        <Box>\n          <Typography>Обработка голоса</Typography>\n          <Box>\n            <Typography>Эхоподавление</Typography>\n            <Switch checked={true} />\n          </Box>\n          <Divider sx={{ margin: '8px 0', borderColor: theme.palette.grey['800'] }} />\n          <Box>\n            <Typography>Шумоподавление</Typography>\n            <Switch checked={false} />\n          </Box>\n          <Divider sx={{ margin: '8px 0', borderColor: theme.palette.grey['800'] }} />\n          <Box>\n            <Typography>Автоматическа регулировка усиления</Typography>\n            <Switch checked={true} />\n          </Box>\n          <Divider sx={{ margin: '8px 0', borderColor: theme.palette.grey['800'] }} />\n        </Box>\n        {/* NOTE: Сбросить голосовые настройки */}\n        <Box>\n          <Button variant=\"outlined\" color=\"error\">\n            Сбросить голосовые настройки\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport const VoiceAndVideoMemoized = memo(VoiceAndVideo);\n","import { memo } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Friends } from 'modules/friends/pages/friends';\nimport { Messages } from 'core/components/messages';\nimport { Settings } from 'modules/user/pages/settings';\nimport { Channels } from 'modules/channels/pages/channels';\nimport { AllFriends } from 'core/components/all-friends';\nimport { FriendsOnline } from 'core/components/friends-online';\nimport { FriendsInvites } from 'core/components/friends-invites';\nimport { FriendsApprovals } from 'core/components/friends-approvals';\nimport { AddToFriends } from 'core/components/add-to-friends';\nimport { UserProfile } from 'modules/user/pages/settings/components/user-profile';\nimport { UserAccount } from 'modules/user/pages/settings/components/user-account';\nimport { VoiceAndVideo } from 'modules/user/pages/settings/components/voice-and-video';\n\nconst PrivateRoutes = () => {\n  return (\n    <Routes>\n      {/* NOTE: Друзья */}\n      <Route path=\"friends\" element={<Friends />}>\n        <Route path=\"all-users\" element={<AllFriends />} />\n        <Route path=\"friends-online\" element={<FriendsOnline />} />\n        <Route path=\"friends-invites\" element={<FriendsInvites />} />\n        <Route path=\"friends-approvals\" element={<FriendsApprovals />} />\n        <Route path=\"add-to-friends\" element={<AddToFriends />} />\n      </Route>\n      {/* NOTE: Сообщения */}\n      <Route path=\"messages\" element={<Messages />} />\n      {/* NOTE: Настройка */}\n      <Route path=\"settings\" element={<Settings />}>\n        <Route path=\"user-account\" element={<UserAccount />} />\n        <Route path=\"user-profile\" element={<UserProfile />} />\n        <Route path=\"voice-and-video\" element={<VoiceAndVideo />} />\n      </Route>\n      {/* NOTE: Каналы */}\n      <Route path=\"channels\" element={<Channels />} />\n      <Route path=\"*\" element={<Navigate to=\"friends/all-users\" />} />\n    </Routes>\n  );\n};\n\nexport const PrivateRoutesMemoized = memo(PrivateRoutes);\n","import { memo } from 'react';\nimport { PrivateRoutes, PublicRoutes } from 'core/routes';\n\ntype AppProps = {\n  isAuthorizated: boolean;\n};\n\nconst App = ({ isAuthorizated }: AppProps) => {\n  return isAuthorizated ? <PrivateRoutes /> : <PublicRoutes />;\n};\n\nexport const AppMemoized = memo(App);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { App } from 'core/components/app';\nimport { socket } from 'core/utils/socket';\nimport { requestGetUserAction } from 'modules/user/store';\nimport { RootState } from 'core/store/types';\nimport { requestRefreshAction } from 'modules/authorization/store';\n\nconst AppContainer = () => {\n  const dispatch = useDispatch();\n\n  const { authorizated } = useSelector((state: RootState) => state.authorization);\n  const { user } = useSelector((state: RootState) => state.user);\n\n  useEffect(() => {\n    if (localStorage.getItem('access_token')) {\n      // TODO: Добавить авторизацию как getAuthorizaton через jsonwebtoken\n      dispatch(requestRefreshAction());\n    }\n  }, []);\n\n  useEffect(() => {\n    if (authorizated) {\n      dispatch(requestGetUserAction());\n\n      socket.on('on-connect', () => {\n        dispatch(requestGetUserAction());\n      });\n    }\n  }, [authorizated]);\n\n  useEffect(() => {\n    if (user?.id) {\n      socket.emit('on-connect', user.id);\n    }\n  }, [user?.id]);\n\n  // useEffect(() => {\n  //   if (userId) {\n  //     socket.on('on-connect', () => {\n  //       dispatch(getUsers());\n  //       dispatch(getFriendsAction());\n  //       dispatch(getInvites());\n  //       dispatch(getApprovals());\n  //     });\n\n  //     socket.on('on-disconnect', () => {\n  //       dispatch(getUsers());\n  //       dispatch(getFriendsAction());\n  //       dispatch(getInvites());\n  //       dispatch(getApprovals());\n  //     });\n\n  //     socket.on('on-add-invite-to-friends', () => {\n  //       dispatch(getInvites());\n  //       dispatch(getApprovals());\n  //     });\n\n  //     socket.on('on-add-to-friends', () => {\n  //       dispatch(getFriendsAction());\n  //       dispatch(getInvites());\n  //       dispatch(getApprovals());\n  //     });\n\n  //     socket.on('on-remove-from-friends', () => {\n  //       dispatch(getFriendsAction());\n  //     });\n\n  //     socket.on('on-remove-invite-to-friends', () => {\n  //       dispatch(getInvites());\n  //       dispatch(getApprovals());\n  //     });\n  //   }\n  // }, [userId]);\n\n  // if (isLoading) {\n  //   return <Loader />;\n  // }\n\n  return <App isAuthorizated={authorizated} />;\n};\n\nexport { AppContainer };\n","import { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@mui/material';\nimport { injectGlobal } from '@emotion/css';\nimport { store } from 'core/store';\nimport { AppContainer } from 'core/containers/app-container';\nimport { theme } from 'core/theme';\nimport { ToastContainer } from 'react-toastify';\nimport { injectStyle } from 'react-toastify/dist/inject-style';\n\nconst Root = () => {\n  injectGlobal`\n    *,\n    *::before,\n    *::after {\n      box-sizing: inherit;\n    }\n\n    html {\n      box-sizing: border-box;\n    }\n\n    html,\n    body,\n    .root {\n      height: 100%;\n    }\n\n    body {\n      margin: 0;\n      background: radial-gradient(105.05% 99.28% at 50% 29.72%, #8c9eff 0%, #536dfe 42.9%, #536dfe 61.7%, #3d5afe 84.71%, #304ffe 100%);\n      background-repeat: no-repeat;\n    }\n\n    input:-webkit-autofill,\n    input:-webkit-autofill:hover,\n    input:-webkit-autofill:focus,\n    input:-webkit-autofill:active {\n      box-shadow: 0 0 0 30px #ffffff inset;\n    }\n  `;\n\n  injectStyle();\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <HashRouter>\n          <AppContainer />\n          <ToastContainer theme=\"light\" />\n        </HashRouter>\n      </ThemeProvider>\n    </Provider>\n  );\n};\n\nrender(<Root />, document.querySelector('.root'));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkvideo_calls\"] = globalThis[\"webpackChunkvideo_calls\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [160], () => (__webpack_require__(4242)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","API_URL","authorizationSlice","name","initialState","access_token","authorizated","loading","error","reducers","requestRegistrationAction","state","payload","successRegistrationAction","localStorage","setItem","failureRegistrationAction","response","data","getError","requestAuthorizationAction","successAuthorizationAction","failureAuthorizationAction","requestRefreshAction","successRefreshAction","failureRefreshAction","removeItem","location","reload","requestLogoutAction","successLogoutAction","failureLogoutAction","message","actions","authorizationReducer","reducer","axiosInstance","withCredentials","baseURL","interceptors","request","use","config","headers","Authorization","getItem","Promise","reject","originalConfig","status","_retry","store","addMessageToChannel","channel","post","getApprovals","get","getChannelMessages","getChannels","getInvites","getFriendsAction","userSlice","user","users","audioInDevice","audioOutDevice","friends","invites","approvals","isCall","isIncomingCall","isCallAccepted","isCallCanceled","channels","channelMessages","requestGetUserAction","successGetUserAction","failureGetUserAction","requestUpdateUserAction","successUpdateUserAction","failureUpdateUserAction","requestGetUsersAction","successGetUsersAction","failureGetUsersAction","setIsCall","setIsIncomingCall","setIsCallAccepted","setIsCallCanceled","setAudioInDevice","setAudioOutDevice","extraReducers","builder","addCase","fulfilled","userReducer","ApiUrl","getUserService","method","url","updateUserService","params","getUsersService","getUserSaga","console","updateUserSaga","getUsersSaga","Registration","Refresh","Logout","registrationService","authorizationService","refreshService","logoutService","registrationSaga","authorizationSaga","refreshSaga","logoutSaga","sagas","type","sagaMiddleware","authorization","middleware","run","map","saga","TextFieldMemoized","memo","props","theme","createTheme","palette","primary","light","main","dark","AuthorizationLayoutMemoized","children","Box","sx","display","alignItems","justifyContent","height","AuthorizationMemoized","dispatch","navigate","email","setEmail","useState","password","setPassword","isShowPassword","setIsShowPassword","width","gridTemplateColumns","borderRadius","border","grey","overflow","className","src","alt","padding","backgroundColor","common","white","rowGap","Typography","variant","id","label","value","onChange","event","target","placeholder","autoComplete","fullWidth","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","VisibilityOff","Visibility","LoadingButton","color","size","Link","cursor","underline","preventDefault","RegistrationMemoized","setName","useEffect","log","errors","forEach","msg","TextField","PublicRoutesMemoized","path","element","to","ButtonMemoized","disableElevation","NavigationMemoized","alignContent","Tooltip","title","arrow","placement","Group","Dashboard","Divider","Settings","socket","io","transports","userUserSelector","userUsersSelector","userFriendsSelector","userInvitesSelector","userApprovalsSelector","userChannelMessagesSelector","UserMemoized","channelId","columnGap","success","Badge","overlap","anchorOrigin","vertical","horizontal","Avatar","DeleteOutline","UserControlMemoized","isMic","setIsMic","isVideocam","setIsVideocam","default_color","image","slice","Mic","MicOff","Videocam","VideocamOff","FriendsMemoized","pathname","usersMessages","setUsersMessages","gridTemplateRows","borderBottom","margin","overflowY","key","userData","_id","includes","MessagesMemoized","setMessage","setChannel","author","text","UserSettingsMemoized","userSettingsConfig","divider","component","borderColor","SettingsMemoized","backgroundImage","ChannelsLayoutMemoized","Array","from","keys","ChannelsMemoized","UserFriendsMemoized","anchorEl","setAnchorEl","Chat","Call","currentTarget","MoreVert","Menu","open","Boolean","onClose","MenuListProps","MenuItem","friendId","AllFriendsMemoized","length","FriendsOnlineMemoized","friend","UserAddToFriendsMemoized","FriendsInvitesMemoized","invite","UserApprovalsMemoized","FriendsApprovalsMemoized","approval","UserAddInviteToFriendsMemoized","setSearchValue","AddToFriendsMemoized","searchValue","UserProfileMemoized","setColor","setImage","description","setDescription","isDefaultColor","setIsDefaultColor","isFieldsChanged","setIsFieldsChanged","minutes","seconds","timer","setTimer","interval","setInterval","prevValue","clearInterval","Math","floor","toString","padStart","Number","useTimer","imageInput","useRef","handleEscapeKeyDown","document","addEventListener","removeEventListener","inputProps","ref","input","current","files","fileReader","FileReader","readAsDataURL","onload","String","result","focused","Snackbar","Slide","TransitionComponent","left","transform","reason","action","textTransform","top","right","textAlign","fill","CancelOutlined","fontSize","click","fontFamily","Check","Colorize","paddingTop","justifyItems","disableRipple","multiline","rows","maxHeight","boxShadow","backgroundSize","backgroundRepeat","backgroundPosition","content","backdropFilter","AddPhotoAlternateOutlined","paddingBottom","Edit","ModalChangeUserEmailMemoized","isOpen","Modal","onBackdropClick","disableEnforceFocus","Close","trim","ModalChangeUserNameMemoized","UserAccountMemoized","isEmailShow","setIsEmailShow","isModalChangeUserName","setIsModalChangeUserName","isModalChangeUserEmail","setIsModalChangeUserEmail","fontWeight","lineHeight","bottom","firstPartEndIndex","search","join","getHiddenUserEmail","disabled","VoiceAndVideoMemoized","stream","getUserMedia","setState","setStream","setError","stopUserMedia","getTracks","track","stop","constraints","navigator","mediaDevices","useUserMedia","audioInDevices","audioOutDevices","videoInDevices","getDeviceInfo","setAudioInDevices","setAudioOutDevices","setVideoInDevices","devices","enumerateDevices","filter","device","kind","useDeviceInfo","videoInDevice","setVideoInDevice","isAudio","setIsAudio","isVideo","setIsVideo","userVideo","userAudio","deviceId","audio","video","audioStream","MediaStream","getAudioTracks","videoStream","getVideoTracks","srcObject","marginBottom","Select","maxWidth","whiteSpace","Slider","defaultValue","valueLabelDisplay","max","LinearProgress","autoPlay","muted","RadioGroup","FormControlLabel","control","Radio","Switch","checked","PrivateRoutesMemoized","AppMemoized","isAuthorizated","AppContainer","Root","ThemeProvider","render","querySelector","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","i","j","Object","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","scriptUrl","importScripts","currentScript","scripts","getElementsByTagName","Error","replace","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","bind","push","__webpack_exports__"],"sourceRoot":""}